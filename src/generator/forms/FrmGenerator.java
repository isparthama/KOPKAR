/*
 * From Template
 *
 * Created on June 29, 2007, 2:00 PM
 * 
 * 
 * How to Call this Form on FrmMainFrame
 * Sample : 
 *    
 * import common.component.FrmCompany;
 * 
 * .......
 * 
 * 
 * FrmCompany frmCompany;
 * 
 * .......
 * 
 try {
        if (frmCompany == null) {
            frmmCompany = new FrmCompany(this);
        }
        
        showForm(frmCompany);
        
    }catch(Exception e) {
        e.printStackTrace();
    }
 * 
 */

package generator.forms;


import classinterface.NavigatorFormInt;
import common.component.FrmMainFrame;
import file.filecls;
import generator.objects.databasecls;
import generator.objects.databasecolcls;
import generator.objects.tablecls;
import generator.objects.tablecolcls;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jdbc.DbBean;
import utils.CodeException;
import utils.GlobalModel;
import utils.GlobalUtils;
import utils.selectallJTable;

/**
 *
 * @author  Generator
 */

public class FrmGenerator extends javax.swing.JInternalFrame implements NavigatorFormInt {

    protected static int istatus = 0;
    protected static int iformtype = 1;
    public static String CLASSNAME="FrmTblcarabyr";
    
    FrmMainFrame mf ;

    protected DefaultTableModel model;
    protected databasecolcls odb=new databasecolcls();
    tablecolcls o;
    filecls otmp=new filecls();
   
    /** Creates new form Area */
    public FrmGenerator() throws CodeException {
        initComponents();
    }
    
    public FrmGenerator(FrmMainFrame mf) throws CodeException{
        this.mf = mf;
        initComponents();
        model=(DefaultTableModel) jTblDetail.getModel();
        odb.initdata();
        showDataBase();
    }

    protected void inisialisasicomponents(){
        initComponents();
    }
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jHeader = new javax.swing.JLabel();
        HorizontalLine = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblDetail = new selectallJTable(model);
        jlblCompany = new javax.swing.JLabel();
        jchkForm = new javax.swing.JCheckBox();
        jchkClass = new javax.swing.JCheckBox();
        jchkExtClass = new javax.swing.JCheckBox();
        jchkExtClassCol = new javax.swing.JCheckBox();
        joptDesktop = new javax.swing.JRadioButton();
        joptWeb = new javax.swing.JRadioButton();
        jlblCompany1 = new javax.swing.JLabel();
        jmbdatabase = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jchkStoreProcedures = new javax.swing.JCheckBox();
        jchkDropStoreProcedures = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Generator");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jHeader.setBackground(new java.awt.Color(102, 102, 102));
        jHeader.setFont(new java.awt.Font("Dialog", 1, 10));
        jHeader.setForeground(new java.awt.Color(255, 255, 255));
        jHeader.setText(" : : Generator");
        jHeader.setAlignmentY(0.0F);
        jHeader.setOpaque(true);
        getContentPane().add(jHeader);
        jHeader.setBounds(30, 30, 200, 20);

        HorizontalLine.setForeground(new java.awt.Color(102, 102, 102));
        HorizontalLine.setAlignmentX(0.0F);
        HorizontalLine.setAlignmentY(0.0F);
        getContentPane().add(HorizontalLine);
        HorizontalLine.setBounds(160, 50, 650, 2);

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(30, 50, 2, 400);

        jTblDetail.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jTblDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "null", "Table Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTblDetail.setSurrendersFocusOnKeystroke(true);
        jTblDetail.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTblDetailPropertyChange(evt);
            }
        });
        jTblDetail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTblDetailKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTblDetailKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTblDetailKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTblDetail);
        jTblDetail.getColumnModel().getColumn(0).setMaxWidth(70);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(70, 140, 720, 230);

        jlblCompany.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblCompany.setText("Select a Table To Generate");
        getContentPane().add(jlblCompany);
        jlblCompany.setBounds(70, 80, 200, 20);

        jchkForm.setFont(new java.awt.Font("Dialog", 1, 10));
        jchkForm.setSelected(true);
        jchkForm.setText("Form");
        getContentPane().add(jchkForm);
        jchkForm.setBounds(660, 110, 130, 23);

        jchkClass.setFont(new java.awt.Font("Dialog", 1, 10));
        jchkClass.setSelected(true);
        jchkClass.setText("class");
        getContentPane().add(jchkClass);
        jchkClass.setBounds(320, 110, 80, 23);

        jchkExtClass.setFont(new java.awt.Font("Dialog", 1, 10));
        jchkExtClass.setSelected(true);
        jchkExtClass.setText("Extended class");
        getContentPane().add(jchkExtClass);
        jchkExtClass.setBounds(400, 110, 130, 23);

        jchkExtClassCol.setFont(new java.awt.Font("Dialog", 1, 10));
        jchkExtClassCol.setSelected(true);
        jchkExtClassCol.setText("Extended class Col");
        getContentPane().add(jchkExtClassCol);
        jchkExtClassCol.setBounds(530, 110, 130, 23);

        buttonGroup1.add(joptDesktop);
        joptDesktop.setFont(new java.awt.Font("Dialog", 1, 10));
        joptDesktop.setSelected(true);
        joptDesktop.setText("Desktop");
        getContentPane().add(joptDesktop);
        joptDesktop.setBounds(70, 380, 123, 23);

        buttonGroup1.add(joptWeb);
        joptWeb.setFont(new java.awt.Font("Dialog", 1, 10));
        joptWeb.setText("Webbase");
        joptWeb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                joptWebItemStateChanged(evt);
            }
        });
        getContentPane().add(joptWeb);
        joptWeb.setBounds(200, 380, 150, 23);

        jlblCompany1.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblCompany1.setText("Select a Table To Generate");
        getContentPane().add(jlblCompany1);
        jlblCompany1.setBounds(70, 113, 200, 20);

        jmbdatabase.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jmbdatabase.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jmbdatabase.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jmbdatabaseItemStateChanged(evt);
            }
        });
        getContentPane().add(jmbdatabase);
        jmbdatabase.setBounds(320, 80, 200, 20);

        jButton1.setFont(new java.awt.Font("Dialog", 0, 10));
        jButton1.setText("Show Tables");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(530, 80, 110, 23);

        jchkStoreProcedures.setFont(new java.awt.Font("Dialog", 1, 10));
        jchkStoreProcedures.setSelected(true);
        jchkStoreProcedures.setText("Store Procedures");
        getContentPane().add(jchkStoreProcedures);
        jchkStoreProcedures.setBounds(460, 380, 150, 23);

        jchkDropStoreProcedures.setFont(new java.awt.Font("Dialog", 1, 10));
        jchkDropStoreProcedures.setSelected(true);
        jchkDropStoreProcedures.setText("Include Drop Statement");
        getContentPane().add(jchkDropStoreProcedures);
        jchkDropStoreProcedures.setBounds(620, 380, 170, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         
    }//GEN-LAST:event_formInternalFrameOpened

private void kdatePurchaseDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kdatePurchaseDateFocusLost

}//GEN-LAST:event_kdatePurchaseDateFocusLost

private void kdatePurchaseDateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_kdatePurchaseDateCaretPositionChanged

}//GEN-LAST:event_kdatePurchaseDateCaretPositionChanged

private void kdatePurchaseDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kdatePurchaseDatePropertyChange

}//GEN-LAST:event_kdatePurchaseDatePropertyChange

private void jTblDetailPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTblDetailPropertyChange
    // TODO add your handling code here:
    
}//GEN-LAST:event_jTblDetailPropertyChange

private void jTblDetailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTblDetailKeyPressed
    // TODO add your handling code here:

    
}//GEN-LAST:event_jTblDetailKeyPressed

private void jTblDetailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTblDetailKeyReleased
    // TODO add your handling code here:
    
}//GEN-LAST:event_jTblDetailKeyReleased

private void jTblDetailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTblDetailKeyTyped
    // TODO add your handling code here:
}//GEN-LAST:event_jTblDetailKeyTyped

private void joptWebItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_joptWebItemStateChanged
    // TODO add your handling code here:
    if (joptWeb.isSelected()){
        jchkExtClass.setText("update file");
    } else {
        jchkExtClass.setText("Extended class");
    }
}//GEN-LAST:event_joptWebItemStateChanged

private void jmbdatabaseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jmbdatabaseItemStateChanged
    GlobalModel.clearRow(model);
}//GEN-LAST:event_jmbdatabaseItemStateChanged

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    // TODO add your handling code here:
    if (jmbdatabase.getSelectedIndex()>-1){
        DbBean db;
        db=new DbBean(jmbdatabase.getSelectedItem().toString());
        try {
            db.connect();
            // TODO add your handling code here:
            o=new tablecolcls(db);
            if (o.initdata()){
                try {
                    showData();
                } catch (CodeException ex) {
                    Logger.getLogger(FrmGenerator.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmGenerator.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmGenerator.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}//GEN-LAST:event_jButton1ActionPerformed


private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {                                            
    formInternalFrameActivated();
}                                           

protected void formInternalFrameActivated(){
    setToolBar(iformtype,istatus);
    mf.setIcon(CLASSNAME);
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrmGenerator().setVisible(true);
                } catch (CodeException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator HorizontalLine;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jHeader;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    protected javax.swing.JTable jTblDetail;
    private javax.swing.JCheckBox jchkClass;
    private javax.swing.JCheckBox jchkDropStoreProcedures;
    private javax.swing.JCheckBox jchkExtClass;
    private javax.swing.JCheckBox jchkExtClassCol;
    private javax.swing.JCheckBox jchkForm;
    private javax.swing.JCheckBox jchkStoreProcedures;
    private javax.swing.JLabel jlblCompany;
    private javax.swing.JLabel jlblCompany1;
    protected javax.swing.JComboBox jmbdatabase;
    private javax.swing.JRadioButton joptDesktop;
    private javax.swing.JRadioButton joptWeb;
    // End of variables declaration//GEN-END:variables

 
    public void moveFirst() throws CodeException {
        
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void movePrevious() throws CodeException {

        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveNext() throws CodeException {

        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveLast() throws CodeException {

        showData();
        mf.setIcon(CLASSNAME);
    }

    public void searchData() throws CodeException {
        showData();
        mf.setIcon(CLASSNAME);

    }

    private void clearfield(){
         
    }

    public void newData() throws CodeException {
        istatus=1;
        clearfield();
        setToolBar(iformtype,istatus);
    }

    public void saveData() throws CodeException {
        int i=0;
        for (i=0;i<o.size();i++){
            if (Boolean.parseBoolean(GlobalUtils.churuf(jTblDetail.getValueAt(i, 0)))){
                tablecls t = o.get(i);
                t.generate(joptDesktop.isSelected(),jchkClass.isSelected(),jchkExtClass.isSelected(),jchkExtClassCol.isSelected(),jchkForm.isSelected(),jchkStoreProcedures.isSelected(),jchkDropStoreProcedures.isSelected());
            }
        }
        JOptionPane.showMessageDialog(this, "Process Complete");
        istatus = 0;
        setToolBar(iformtype,istatus);
        mf.setIcon(CLASSNAME);
    }

    public void showData() throws CodeException {
        setToolBar(iformtype,istatus);
        setCursor(GlobalUtils.HOURGLASSCURSOR);

        int i=0;
        GlobalModel.clearRow(model);
        for (i=0;i<o.size();i++){
            tablecls t = o.get(i);
            model.addRow(new Object[model.getColumnCount()]);
            model.setValueAt(false, model.getRowCount()-1, 0);
            model.setValueAt(t.getTablename(), model.getRowCount()-1, 1);
        }
        

        setCursor(GlobalUtils.NORMALCURSOR);
    }

    public void showDataBase() throws CodeException {
        setToolBar(iformtype,istatus);
        setCursor(GlobalUtils.HOURGLASSCURSOR);

        int i=0;
        jmbdatabase.removeAllItems();
        for (i=0;i<odb.size();i++){
            databasecls t = odb.get(i);
            jmbdatabase.addItem(t.getDatabase_name());
        }


        setCursor(GlobalUtils.NORMALCURSOR);
    }

    public void delete() throws CodeException {
        mf.setIcon(CLASSNAME);
    }

    public void setToolBar(int iFormType, int istatus) {
        mf.setToolBar(iformtype,istatus);

    }

    public void setData() throws CodeException {
        

    }

    public void undo() throws CodeException {
        istatus = 0;
        showData();
    }

    public void execute() throws CodeException {
       saveData();
    }

    public void printData() throws CodeException {
    }

    public void importCsv() throws CodeException {
            

    }

    public void exportCsv() throws CodeException {
        
        
    }

    public void importText() throws CodeException {
        
    }

    public void exportText() throws CodeException {
        
    }

    protected void mfseticon() {
        mf.setIcon(CLASSNAME);
    }
    
}
