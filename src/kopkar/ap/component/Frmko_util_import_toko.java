/*
 * From op_salesman
 *
 * Created on June 29, 2007, 2:00 PM
 * 
 * 
 * How to Call this Form on FrmMainFrame
 * Sample : 
 *    
 * import common.component.FrmCompany;
 * 
 * .......
 * 
 * 
 * FrmCompany frmCompany;
 * 
 * .......
 * 
 try {
        if (frmCompany == null) {
            frmmCompany = new FrmCompany(this);
        }
        
        showForm(frmCompany);
        
    }catch(Exception e) {
        e.printStackTrace();
    }
 * 
 */

package kopkar.ap.component;


import classinterface.NavigatorFormInt;
import common.component.FrmMainFrame;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import jdbc.DbBean;
import kopkar.gl.objectclasses.gl_kalender_detail1ext;
import kopkar.gl.objectclasses.gl_kalenderext;
import kopkar.gl.objectclasses.gl_kalenderextcol;
import kopkar.ko.objectclasses.ko_anggota_potongan_by_periodeext;
import kopkar.utils.browsecontroller;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import tablemodel.MyTableModel;
import utils.CodeException;
import utils.GlobalModel;
import utils.GlobalUtils;
import utils.appsettinghandler;
import utils.selectallJTable;

/**
 *
 * @author  Generator
 */

public class Frmko_util_import_toko extends javax.swing.JInternalFrame implements NavigatorFormInt {

    private static int istatus = 0;
    private static int iformtype = 0;
    public static String CLASSNAME="Frmrp_supplier";
    browsecontroller obrowse=new browsecontroller();
    JasperPrint jasperPrint;
    JasperReport jasperReport;
    DbBean db=appsettinghandler.db;
    String status="";


    FrmMainFrame mf ;
    private DefaultTableModel model;

   
    /** Creates new form Area */
    public Frmko_util_import_toko() throws CodeException {
        initComponents();

    }
    
    public Frmko_util_import_toko(FrmMainFrame mf) throws CodeException{
        this.mf = mf;
        initComponents();

        model=(DefaultTableModel) jtbldata.getModel();

        showtahun();
        showbulan();

        mf.setToolBar(iformtype,7);
    }

    private void showtahun() {
        gl_kalenderextcol okal=new gl_kalenderextcol();
        try {
            okal.initdata();
            jcmbyop.removeAllItems();
            for (int i=0;i<okal.size();i++){
                gl_kalenderext o = okal.get(i);
                jcmbyop.addItem(o.getyop());
            }
            jcmbyop.setSelectedItem(GlobalUtils.toInt(GlobalUtils.formatDate(GlobalUtils.sessiondate,"yyyy")));
        } catch (SQLException ex) {
            Logger.getLogger(Frmap_payment.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void showbulan() {
        gl_kalenderext okal=new gl_kalenderext();
        gl_kalender_detail1ext o;
        try {
            if (jcmbyop.getSelectedIndex()>-1){
                jcmbmop.removeAllItems();
                if (okal.initdata((Integer) jcmbyop.getSelectedItem())) {
                    for (int i = 0; i < okal.getDetail1().size(); i++) {
                        o=okal.getDetail1().get(i);
                        jcmbmop.addItem(GlobalUtils.getMonthName(o.getmop()));
                    }
                }
                jcmbmop.setSelectedItem(GlobalUtils.getMonthName(GlobalUtils.toInt(GlobalUtils.formatDate(GlobalUtils.sessiondate,"MM"))));
            }
        } catch (CodeException ex) {
            Logger.getLogger(Frmap_payment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlable1 = new javax.swing.JLabel();
        HorizontalLine = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jlblyop = new javax.swing.JLabel();
        jlblmop = new javax.swing.JLabel();
        jcmbyop = new javax.swing.JComboBox();
        jcmbmop = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbldata = new selectallJTable(model);
        jHeader1 = new javax.swing.JLabel();
        jtxtjml_record = new javax.swing.JTextField();
        jlblmop1 = new javax.swing.JLabel();
        jtxttotal_toko = new javax.swing.JTextField();
        jlblmop2 = new javax.swing.JLabel();
        jtxttotal_sisa_tagihan_bln_seb = new javax.swing.JTextField();
        jlblmop3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Import Saldo Pinjaman Toko");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jlable1.setBackground(new java.awt.Color(102, 102, 102));
        jlable1.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlable1.setForeground(new java.awt.Color(255, 255, 255));
        jlable1.setText(" Copy dari excel file dan Ctrll+V di dalam table");
        jlable1.setAlignmentY(0.0F);
        jlable1.setOpaque(true);
        getContentPane().add(jlable1);
        jlable1.setBounds(10, 470, 980, 20);

        HorizontalLine.setForeground(new java.awt.Color(102, 102, 102));
        HorizontalLine.setAlignmentX(0.0F);
        HorizontalLine.setAlignmentY(0.0F);
        getContentPane().add(HorizontalLine);
        HorizontalLine.setBounds(130, 50, 650, 6);

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(10, 50, 6, 400);

        jlblyop.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblyop.setText("Tahun");
        getContentPane().add(jlblyop);
        jlblyop.setBounds(10, 70, 140, 13);

        jlblmop.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblmop.setText("Jumlah Record");
        getContentPane().add(jlblmop);
        jlblmop.setBounds(10, 490, 140, 13);

        jcmbyop.setFont(new java.awt.Font("Dialog", 1, 10));
        jcmbyop.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcmbyop.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcmbyopItemStateChanged(evt);
            }
        });
        getContentPane().add(jcmbyop);
        jcmbyop.setBounds(200, 70, 80, 20);

        jcmbmop.setFont(new java.awt.Font("Dialog", 1, 10));
        jcmbmop.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jcmbmop);
        jcmbmop.setBounds(200, 90, 160, 20);

        jtbldata.setFont(new java.awt.Font("Dialog", 0, 10));
        jtbldata.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Yop", "Mop", "Member No", "Nama Anggota", "Departemen", "Tagihan Toko", "Sisa Bln Lalu"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbldata.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtbldata.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jtbldata.setSurrendersFocusOnKeystroke(true);
        jtbldata.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtbldataFocusGained(evt);
            }
        });
        jtbldata.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jtbldataPropertyChange(evt);
            }
        });
        jtbldata.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtbldataKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtbldataKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jtbldata);
        jtbldata.getColumnModel().getColumn(2).setMinWidth(100);
        jtbldata.getColumnModel().getColumn(3).setMinWidth(200);
        jtbldata.getColumnModel().getColumn(4).setMinWidth(200);
        jtbldata.getColumnModel().getColumn(5).setMinWidth(150);
        jtbldata.getColumnModel().getColumn(6).setMinWidth(150);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 120, 980, 340);

        jHeader1.setBackground(new java.awt.Color(102, 102, 102));
        jHeader1.setFont(new java.awt.Font("Dialog", 1, 10));
        jHeader1.setForeground(new java.awt.Color(255, 255, 255));
        jHeader1.setText(" : : Impot Saldo Pinjaman Toko");
        jHeader1.setAlignmentY(0.0F);
        jHeader1.setOpaque(true);
        getContentPane().add(jHeader1);
        jHeader1.setBounds(0, 30, 200, 20);

        jtxtjml_record.setEditable(false);
        jtxtjml_record.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtjml_record.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtjml_record.setText("jTextField1");
        getContentPane().add(jtxtjml_record);
        jtxtjml_record.setBounds(170, 490, 170, 23);

        jlblmop1.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblmop1.setText("Bulan");
        getContentPane().add(jlblmop1);
        jlblmop1.setBounds(10, 90, 140, 13);

        jtxttotal_toko.setEditable(false);
        jtxttotal_toko.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxttotal_toko.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxttotal_toko.setText("jTextField1");
        getContentPane().add(jtxttotal_toko);
        jtxttotal_toko.setBounds(820, 490, 170, 23);

        jlblmop2.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblmop2.setText("Total Tagihan Toko");
        getContentPane().add(jlblmop2);
        jlblmop2.setBounds(660, 490, 140, 13);

        jtxttotal_sisa_tagihan_bln_seb.setEditable(false);
        jtxttotal_sisa_tagihan_bln_seb.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxttotal_sisa_tagihan_bln_seb.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxttotal_sisa_tagihan_bln_seb.setText("jTextField1");
        getContentPane().add(jtxttotal_sisa_tagihan_bln_seb);
        jtxttotal_sisa_tagihan_bln_seb.setBounds(820, 510, 170, 23);

        jlblmop3.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblmop3.setText("Total Sisa Bln Lalu");
        getContentPane().add(jlblmop3);
        jlblmop3.setBounds(660, 510, 140, 13);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         try {
            moveFirst();

         } catch (CodeException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formInternalFrameOpened

private void kdatePurchaseDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kdatePurchaseDateFocusLost

}//GEN-LAST:event_kdatePurchaseDateFocusLost

private void kdatePurchaseDateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_kdatePurchaseDateCaretPositionChanged

}//GEN-LAST:event_kdatePurchaseDateCaretPositionChanged

private void kdatePurchaseDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kdatePurchaseDatePropertyChange

}//GEN-LAST:event_kdatePurchaseDatePropertyChange

private void jcmbyopItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcmbyopItemStateChanged
    // TODO add your handling code here:
    showbulan();
}//GEN-LAST:event_jcmbyopItemStateChanged

private void jtbldataFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtbldataFocusGained
    // TODO add your handling code here:
    
}//GEN-LAST:event_jtbldataFocusGained

private void jtbldataPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jtbldataPropertyChange
    // TODO add your handling code here:
    
}//GEN-LAST:event_jtbldataPropertyChange

private void jtbldataKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtbldataKeyPressed
        Integer row=jtbldata.getSelectedRow();
        Integer col=jtbldata.getSelectedColumn();

        int total_record=0;
        double total_toko=0;
        double total_sisa_tagihan_bln_seb=0;

            if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_V) {
            try {
                String data = (String) Toolkit.getDefaultToolkit()
                .getSystemClipboard().getData(DataFlavor.stringFlavor);

                GlobalModel.clearRow(model);

                String[] datarow=data.split("\n");

                
                for (int i=0;i<datarow.length;i++){
                    String dataval=datarow[i];
                    String[] datafield=dataval.split("\t");
                    addnewrow();
                    for (int j=0;j<model.getColumnCount();j++){
                        total_record++;
                        if (j==0||j==1){
                            model.setValueAt(GlobalUtils.toInt(datafield[j]), model.getRowCount()-1, j);
                        } else if (j==5||j==6){
                            switch (j){
                                case 5:
                                    total_toko=total_toko+GlobalUtils.toDbl(datafield[j]);
                                    break;
                                case 6:
                                    total_sisa_tagihan_bln_seb=total_sisa_tagihan_bln_seb+GlobalUtils.toDbl(datafield[j]);
                                    break;
                            }
                            model.setValueAt(GlobalUtils.toDbl(datafield[j]), model.getRowCount()-1, j);
                        } else {
                            model.setValueAt(datafield[j], model.getRowCount()-1, j);
                        }
                    }
                }
            } catch (UnsupportedFlavorException ex) {
                Logger.getLogger(Frmko_util_import_toko.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Frmko_util_import_toko.class.getName()).log(Level.SEVERE, null, ex);
            }

            jlable1.setText(model.getRowCount()+" Data ready to import");
            jlable1.setBackground(Color.green);
            jtxtjml_record.setText(GlobalUtils.formatnumber(model.getRowCount()));
            jtxttotal_toko.setText(GlobalUtils.formatnumber(total_toko));
            jtxttotal_sisa_tagihan_bln_seb.setText(GlobalUtils.formatnumber(total_sisa_tagihan_bln_seb));

        }
}//GEN-LAST:event_jtbldataKeyPressed

private void addnewrow(){
    model.addRow(new Object[model.getColumnCount()]);

}
private void jtbldataKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtbldataKeyReleased
    int col=jtbldata.getSelectedColumn();
    int row=jtbldata.getSelectedRow();
    // TODO add your handling code here:
    if (evt.getKeyCode()==evt.VK_ENTER&&row>-1){
        switch (col){
            case 8:

                break;
        }
    }
}//GEN-LAST:event_jtbldataKeyReleased
                                     
private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {                                            
    setToolBar(iformtype,7);
    mf.setIcon(CLASSNAME);
}                                           

    public void execute() throws CodeException {
        if (check_periode()){
            int ires=JOptionPane.showConfirmDialog(this, "Yakin Import Saldo Pinjaman Toko?","Import Saldo Pinjaman Toko",JOptionPane.YES_NO_OPTION);
            if (ires==JOptionPane.YES_OPTION){
                ko_anggota_potongan_by_periodeext odata=new ko_anggota_potongan_by_periodeext();
                for (int irow=0;irow<model.getRowCount();irow++){
                    int yop=GlobalUtils.toInt(model.getValueAt(irow, 0));
                    int mop=GlobalUtils.toInt(model.getValueAt(irow, 1));
                    String member_number=GlobalUtils.churuf(model.getValueAt(irow, 2));
                    double toko=GlobalUtils.toDbl(GlobalUtils.churuf(model.getValueAt(irow, 5)));
                    double sisa_tagihan_bln_seb=GlobalUtils.toDbl(GlobalUtils.churuf(model.getValueAt(irow, 6)));
                    odata.update_toko(yop,mop,member_number,toko,sisa_tagihan_bln_seb);
                }
                JOptionPane.showMessageDialog(this, "Proses import selesai");
                jlable1.setText(model.getRowCount()+" Data sudah diupdate, mohon jangan di exekusi lagi");
                jlable1.setBackground(Color.red);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Periode tidak sama mohon data diperbaiki terlebih dahulu");
        }
        

    }

    private Boolean check_periode(){
        int yop=GlobalUtils.toInt(jcmbyop.getSelectedItem().toString());
        int mop=jcmbmop.getSelectedIndex()+1;
        for (int i=0;i<model.getRowCount();i++){
            int yop_r=GlobalUtils.toInt(model.getValueAt(i, 0));
            int mop_r=GlobalUtils.toInt(model.getValueAt(i, 1));
            if (yop!=yop_r||mop!=mop_r){
                GlobalUtils.selectCellTable(jtbldata, i, 0);
                return false;
            }
        }
        return true;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Frmko_util_import_toko().setVisible(true);
                } catch (CodeException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator HorizontalLine;
    private javax.swing.JLabel jHeader1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JComboBox jcmbmop;
    private javax.swing.JComboBox jcmbyop;
    private javax.swing.JLabel jlable1;
    private javax.swing.JLabel jlblmop;
    private javax.swing.JLabel jlblmop1;
    private javax.swing.JLabel jlblmop2;
    private javax.swing.JLabel jlblmop3;
    private javax.swing.JLabel jlblyop;
    private javax.swing.JTable jtbldata;
    private javax.swing.JTextField jtxtjml_record;
    private javax.swing.JTextField jtxttotal_sisa_tagihan_bln_seb;
    private javax.swing.JTextField jtxttotal_toko;
    // End of variables declaration//GEN-END:variables

 

    public void setToolBar(int iFormType, int istatus) {
        mf.setToolBar(iformtype,istatus);

    }

    public void delete() throws CodeException {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void moveFirst() throws CodeException {
        GlobalModel.clearRow(model);
        addnewrow();

        mf.setToolBar(iformtype,7);
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void movePrevious() throws CodeException {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void moveNext() throws CodeException {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void moveLast() throws CodeException {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void newData() throws CodeException {
        GlobalModel.clearRow(model);
        addnewrow();
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void saveData() throws CodeException {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void printData() throws CodeException {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void showData() throws CodeException {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setData() throws CodeException {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void undo() throws CodeException {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void searchData() throws CodeException {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void importCsv() throws CodeException {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void exportCsv() throws CodeException {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void importText() throws CodeException {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void exportText() throws CodeException {
        //throw new UnsupportedOperationException("Not supported yet.");
    }
    
}
