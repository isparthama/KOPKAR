/*
 * From setting_financial_rpt
 *
 * Created on June 29, 2007, 2:00 PM
 * 
 * 
 * How to Call this Form on FrmMainFrame
 * Sample : 
 *    
 * import common.component.FrmCompany;
 * 
 * .......
 * 
 * 
 * FrmCompany frmCompany;
 * 
 * .......
 * 
 try {
        if (frmCompany == null) {
            frmmCompany = new FrmCompany(this);
        }
        
        showForm(frmCompany);
        
    }catch(Exception e) {
        e.printStackTrace();
    }
 * 
 */

package kopkar.gl.component;


import classinterface.NavigatorFormInt;

import common.component.FrmBrowseData;
import common.component.FrmMainFrame;
import java.awt.Font;
import java.awt.event.KeyEvent;
import javax.swing.table.DefaultTableModel;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.table.TableColumn;
import kopkar.ar.objectclasses.ar_pos_sales_detail1ext;
import kopkar.gl.objectclasses.setting_financial_rpt_detail1ext;
import kopkar.gl.objectclasses.setting_financial_rpt_detail1extcol;
import kopkar.gl.objectclasses.setting_financial_rptext;
import kopkar.utils.browsecontroller;
import utils.CodeException;
import utils.GlobalModel;
import utils.GlobalUtils;
import utils.selectallJTable;

/**
 *
 * @author  Generator
 */

public class Frmsetting_financial_rpt extends javax.swing.JInternalFrame implements NavigatorFormInt {

    private static int istatus = 0;
    private static int iformtype = 0;
    public static String CLASSNAME="Frmsetting_financial_rpt";
    
    FrmMainFrame mf ;

    setting_financial_rptext obj=new setting_financial_rptext();
    setting_financial_rpt_detail1extcol objds;
    private DefaultTableModel model;
    private setting_financial_rptext objtmp;
    private browsecontroller obrowse=new browsecontroller();

    
   
    /** Creates new form Area */
    public Frmsetting_financial_rpt() throws CodeException {
        initComponents();
    }
    
    public Frmsetting_financial_rpt(FrmMainFrame mf) throws CodeException{
        this.mf = mf;
        initComponents();
        model=(DefaultTableModel) jtbldetail.getModel();

        TableColumn uomColumn = jtbldetail.getColumnModel().getColumn(1);

        JComboBox comboBox = new JComboBox();
        comboBox.setFont( new Font("Dialog", Font.PLAIN, 10));
        comboBox.addItem("Header");
        comboBox.addItem("Detail");
        comboBox.addItem("Footer");

        uomColumn.setCellEditor(new DefaultCellEditor(comboBox));
    }
     
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jHeader = new javax.swing.JLabel();
        HorizontalLine = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jbtnBrowse = new javax.swing.JButton();
        jlblreportname = new javax.swing.JLabel();
        jtxtreportname = new javax.swing.JTextField();
        jlblreportdesc = new javax.swing.JLabel();
        jtxtreportdesc = new javax.swing.JTextField();
        jlblreprocess = new javax.swing.JLabel();
        jtxtreprocess = new javax.swing.JTextField();
        jtxtTanggalEntry = new javax.swing.JTextField();
        jtxtTanggalUpdate = new javax.swing.JTextField();
        jtxtUserID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbldetail = new selectallJTable(model);
        jHeader1 = new javax.swing.JLabel();
        HorizontalLine1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Setting Financial Report");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        jHeader.setBackground(new java.awt.Color(102, 102, 102));
        jHeader.setFont(new java.awt.Font("Dialog", 1, 10));
        jHeader.setForeground(new java.awt.Color(255, 255, 255));
        jHeader.setText(" : : Setting Financial Report");
        jHeader.setAlignmentY(0.0F);
        jHeader.setOpaque(true);
        getContentPane().add(jHeader);
        jHeader.setBounds(30, 30, 200, 20);

        HorizontalLine.setForeground(new java.awt.Color(102, 102, 102));
        HorizontalLine.setAlignmentX(0.0F);
        HorizontalLine.setAlignmentY(0.0F);
        getContentPane().add(HorizontalLine);
        HorizontalLine.setBounds(160, 50, 650, 6);

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(30, 50, 6, 400);

        jbtnBrowse.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowse.setText("...");
        jbtnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowse);
        jbtnBrowse.setBounds(400, 80, 30, 17);

        jlblreportname.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblreportname.setText("Nama Report");
        getContentPane().add(jlblreportname);
        jlblreportname.setBounds(60, 80, 140, 13);

        jtxtreportname.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtreportname.setText("reportname");
        jtxtreportname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtreportnameFocusGained(evt);
            }
        });
        getContentPane().add(jtxtreportname);
        jtxtreportname.setBounds(250, 80, 150, 23);

        jlblreportdesc.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblreportdesc.setText("Keterangan");
        getContentPane().add(jlblreportdesc);
        jlblreportdesc.setBounds(60, 100, 140, 13);

        jtxtreportdesc.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtreportdesc.setText("reportdesc");
        jtxtreportdesc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtreportdescFocusGained(evt);
            }
        });
        getContentPane().add(jtxtreportdesc);
        jtxtreportdesc.setBounds(250, 100, 410, 23);

        jlblreprocess.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblreprocess.setText("Tanggal Buat");
        getContentPane().add(jlblreprocess);
        jlblreprocess.setBounds(60, 120, 140, 13);

        jtxtreprocess.setEditable(false);
        jtxtreprocess.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtreprocess.setText("reprocess");
        jtxtreprocess.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtreprocessFocusGained(evt);
            }
        });
        getContentPane().add(jtxtreprocess);
        jtxtreprocess.setBounds(250, 120, 150, 23);

        jtxtTanggalEntry.setEditable(false);
        jtxtTanggalEntry.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtTanggalEntry.setText("TanggalEntry");
        getContentPane().add(jtxtTanggalEntry);
        jtxtTanggalEntry.setBounds(360, 30, 170, 20);

        jtxtTanggalUpdate.setEditable(false);
        jtxtTanggalUpdate.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtTanggalUpdate.setText("TanggalUpdate");
        getContentPane().add(jtxtTanggalUpdate);
        jtxtTanggalUpdate.setBounds(530, 30, 130, 20);

        jtxtUserID.setEditable(false);
        jtxtUserID.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtUserID.setText("UserID");
        getContentPane().add(jtxtUserID);
        jtxtUserID.setBounds(660, 30, 140, 20);

        jtbldetail.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtbldetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "No.Baris", "Tipe Kolom", "Level", "Text Header", "Rumus", "Teks Formula", "Vis.Order", "Tampilkan"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtbldetail.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtbldetail.setSurrendersFocusOnKeystroke(true);
        jtbldetail.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jtbldetailPropertyChange(evt);
            }
        });
        jtbldetail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtbldetailKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtbldetailKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jtbldetail);
        jtbldetail.getColumnModel().getColumn(1).setMinWidth(100);
        jtbldetail.getColumnModel().getColumn(1).setPreferredWidth(100);
        jtbldetail.getColumnModel().getColumn(1).setMaxWidth(100);
        jtbldetail.getColumnModel().getColumn(3).setMinWidth(200);
        jtbldetail.getColumnModel().getColumn(3).setPreferredWidth(200);
        jtbldetail.getColumnModel().getColumn(3).setMaxWidth(200);
        jtbldetail.getColumnModel().getColumn(5).setMinWidth(200);
        jtbldetail.getColumnModel().getColumn(5).setPreferredWidth(200);
        jtbldetail.getColumnModel().getColumn(5).setMaxWidth(200);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(60, 190, 900, 230);

        jHeader1.setBackground(new java.awt.Color(102, 102, 102));
        jHeader1.setFont(new java.awt.Font("Dialog", 1, 10));
        jHeader1.setForeground(new java.awt.Color(255, 255, 255));
        jHeader1.setText("Periode Bulan");
        jHeader1.setAlignmentY(0.0F);
        jHeader1.setOpaque(true);
        getContentPane().add(jHeader1);
        jHeader1.setBounds(60, 160, 200, 20);

        HorizontalLine1.setForeground(new java.awt.Color(102, 102, 102));
        HorizontalLine1.setAlignmentX(0.0F);
        HorizontalLine1.setAlignmentY(0.0F);
        getContentPane().add(HorizontalLine1);
        HorizontalLine1.setBounds(190, 180, 770, 6);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         try {
            moveFirst();

         } catch (CodeException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formInternalFrameOpened

private void kdatePurchaseDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kdatePurchaseDateFocusLost

}//GEN-LAST:event_kdatePurchaseDateFocusLost

private void kdatePurchaseDateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_kdatePurchaseDateCaretPositionChanged

}//GEN-LAST:event_kdatePurchaseDateCaretPositionChanged

private void kdatePurchaseDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kdatePurchaseDatePropertyChange

}//GEN-LAST:event_kdatePurchaseDatePropertyChange

private void jtbldetailPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jtbldetailPropertyChange
    // TODO add your handling code here:
    int irow=jtbldetail.getSelectedRow();
    int icol=jtbldetail.getSelectedColumn();

    if (irow>-1){
        cekdetail();
    }
}//GEN-LAST:event_jtbldetailPropertyChange
private boolean lastrowisempty() {
    if (model.getRowCount()>0){
        if (GlobalUtils.churuf(model.getValueAt(model.getRowCount()-1, 2)).equalsIgnoreCase("")){
            return true;
        }
    }
    return false;
}

private Integer getrowno(){
    Integer result=0;
    if (model.getRowCount()>0){
        result=GlobalUtils.toInt(GlobalUtils.churuf(model.getValueAt(model.getRowCount()-1, 0)))/10;
    } 
    return (result+1)*10;
}
private void insertnewlastrow() {
    if (!lastrowisempty()){
        Integer rowno=getrowno();
        model.addRow(new Object[model.getColumnCount()]);
        model.setValueAt(rowno, model.getRowCount()-1, 0);
        model.setValueAt("Header", model.getRowCount()-1, 1);
        model.setValueAt("", model.getRowCount()-1, 2);
        model.setValueAt("", model.getRowCount()-1, 3);
        model.setValueAt(false, model.getRowCount()-1, 4);
        model.setValueAt("", model.getRowCount()-1, 5);
        model.setValueAt(rowno, model.getRowCount()-1, 6);
        model.setValueAt(false, model.getRowCount()-1, 7);
        GlobalUtils.selectCellTable(jtbldetail, model.getRowCount()-1, 1);
    } else {
        GlobalUtils.selectCellTable(jtbldetail, model.getRowCount()-1, 1);
    }
}
private void jtbldetailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtbldetailKeyPressed
    // TODO add your handling code here:
    int col=jtbldetail.getSelectedColumn();
    int row=jtbldetail.getSelectedRow();
    switch (evt.getKeyCode()){
        case KeyEvent.VK_ESCAPE:
            evt.consume();
            jtxtreportname.requestFocus();
            break;
        case KeyEvent.VK_F5:
            evt.consume();
            break;
        case KeyEvent.VK_INSERT:
            evt.consume();
            insertnewlastrow();
            break;
        case KeyEvent.VK_DELETE:
            evt.consume();
            if (jtbldetail.getSelectedRow()<objds.size()){
            setting_financial_rpt_detail1ext o = objds.get(jtbldetail.getSelectedRow());
                if (o.getstatus().equals(o.Status_Insert)){
                    objds.remove(row);
                    obj.setDetail1(objds);
                    model.removeRow(row);
                } else {
                    o.setstatus(ar_pos_sales_detail1ext.Status_delete);
                }
            }
            if (row+1>model.getRowCount()){
                if (model.getRowCount()==0){
                    jtxtreportname.requestFocus();
                } else {
                    GlobalUtils.selectCellTable(jtbldetail, model.getRowCount()-1, col);
                }
            } else {
                jtbldetailPropertyChange(null);
            }
            break;
        case KeyEvent.VK_ENTER:
            break;
    }
}//GEN-LAST:event_jtbldetailKeyPressed

private void jtbldetailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtbldetailKeyReleased
    // TODO add your handling code here:
}//GEN-LAST:event_jtbldetailKeyReleased

private void jtxtreportnameFocusGained(java.awt.event.FocusEvent evt) {                                        
        // TODO add your handling code here:
    jtxtreportname.setSelectionStart(0);
    jtxtreportname.setSelectionEnd(jtxtreportname.getText().length());
}                                          

private void jtxtreportdescFocusGained(java.awt.event.FocusEvent evt) {                                        
        // TODO add your handling code here:
    jtxtreportdesc.setSelectionStart(0);
    jtxtreportdesc.setSelectionEnd(jtxtreportdesc.getText().length());
}                                          

private void jtxtreprocessFocusGained(java.awt.event.FocusEvent evt) {                                       
        // TODO add your handling code here:
    jtxtreprocess.setSelectionStart(0);
    jtxtreprocess.setSelectionEnd(jtxtreprocess.getText().length());
}                                         

private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {                                            
    setToolBar(iformtype,istatus);
    mf.setIcon(CLASSNAME);
}                                           

private void jbtnBrowseActionPerformed(java.awt.event.ActionEvent evt) {                                           
    obrowse.showbrowser(obrowse.setting_financial_rpt, "",jtxtreportname);
    try {
        obj.initdata(jtxtreportname.getText());
        showData();
    } catch (CodeException ex) {
        Logger.getLogger(Frmsetting_financial_rpt.class.getName()).log(Level.SEVERE, null, ex);
    }
}                                                                                 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Frmsetting_financial_rpt().setVisible(true);
                } catch (CodeException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator HorizontalLine;
    private javax.swing.JSeparator HorizontalLine1;
    private javax.swing.JLabel jHeader;
    private javax.swing.JLabel jHeader1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton jbtnBrowse;
    private javax.swing.JLabel jlblreportdesc;
    private javax.swing.JLabel jlblreportname;
    private javax.swing.JLabel jlblreprocess;
    private javax.swing.JTable jtbldetail;
    private javax.swing.JTextField jtxtTanggalEntry;
    private javax.swing.JTextField jtxtTanggalUpdate;
    private javax.swing.JTextField jtxtUserID;
    private javax.swing.JTextField jtxtreportdesc;
    private javax.swing.JTextField jtxtreportname;
    private javax.swing.JTextField jtxtreprocess;
    // End of variables declaration//GEN-END:variables

 
    public void moveFirst() throws CodeException {
        obj.moveFirst();
        
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void movePrevious() throws CodeException {
        obj.movePrevious();

        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveNext() throws CodeException {
        obj.moveNext();

        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveLast() throws CodeException {
        obj.moveLast();

        showData();
        mf.setIcon(CLASSNAME);
    }

    public void searchData() throws CodeException {
        showData();
        mf.setIcon(CLASSNAME);

    }

    private void clearfield(){
        jtxtreportname.setText("");
        jtxtreportdesc.setText("");
        jtxtreprocess.setText("");
        jtxtTanggalEntry.setText("");
        jtxtTanggalUpdate.setText("");
        jtxtUserID.setText("");
    }

    public void newData() throws CodeException {
        istatus=1;
        clearfield();
        objtmp=obj;
        obj=new setting_financial_rptext();
        showData();
        
        setToolBar(iformtype,istatus);
    }

    public void saveData() throws CodeException {
        setData();
        obj.update();
        showData();

        istatus = 0;
        setToolBar(iformtype,istatus);
        mf.setIcon(CLASSNAME);
    }

    public void showData() throws CodeException {
        setToolBar(iformtype,istatus);
        setCursor(GlobalUtils.HOURGLASSCURSOR);

        jtxtreportname.setText(obj.getreportname());
        jtxtreportdesc.setText(obj.getreportdesc());
        jtxtreprocess.setText(obj.getreprocess());
        jtxtTanggalEntry.setText(GlobalUtils.churuf(obj.getentrydate()));
        jtxtTanggalUpdate.setText(GlobalUtils.churuf(obj.getauditdate()));
        jtxtUserID.setText(obj.getaudituser());

        objds=obj.getDetail1();
        GlobalModel.clearRow(model);
        for(int i=0;i<objds.size();i++){
            boolean bshowdata=false;
            boolean ballowformulation=false;
            setting_financial_rpt_detail1ext o = objds.get(i);
            model.addRow(new Object[model.getColumnCount()]);
            model.setValueAt(o.getrowno(), i, 0);
            if (o.getcolumntype().equalsIgnoreCase("1")){
            model.setValueAt("Header", i, 1);
            } else if (o.getcolumntype().equalsIgnoreCase("2")){
                model.setValueAt("Detail", i, 1);
            } else {
                model.setValueAt("Footer", i, 1);
            }
            model.setValueAt(o.getlevelno(), i, 2);
            model.setValueAt(o.gettextheader(), i, 3);
            if (o.getallowformulation().equalsIgnoreCase("Y")){
                ballowformulation=true;
            }
            
            if (o.getshowdata().equalsIgnoreCase("Y")){
                bshowdata=true;
            }
            model.setValueAt(ballowformulation, i, 4);
            model.setValueAt(o.gettextformulation(), i, 5);
            model.setValueAt(o.getvisorder(), i, 6);
            model.setValueAt(bshowdata, i, 7);
        }
        insertnewlastrow();

        setCursor(GlobalUtils.NORMALCURSOR);
    }

    public void delete() throws CodeException {
        if (obj.delete()){
            obj.moveNext();
            showData();
        }
        mf.setIcon(CLASSNAME);
    }

    public void setToolBar(int iFormType, int istatus) {
        mf.setToolBar(iformtype,istatus);

        if (istatus==1){
            jbtnBrowse.setEnabled(false);
        } else {
            jbtnBrowse.setEnabled(true);
        }
    }

    public void setData() throws CodeException {
        if (istatus==1){
            obj.insert();
        }
        obj.setreportname(jtxtreportname.getText());
        obj.setreportdesc(jtxtreportdesc.getText());
        obj.setreprocess(jtxtreprocess.getText());
        

    }

    public void undo() throws CodeException {
        istatus = 0;
        obj=objtmp;
        showData();
    }

    public void execute() throws CodeException {
       saveData();
    }

    public void printData() throws CodeException {
    }

    public void importCsv() throws CodeException {
            

    }

    public void exportCsv() throws CodeException {
        
        
    }

    public void importText() throws CodeException {
        
    }

    public void exportText() throws CodeException {
        
    }

    private void cekdetail() {
        int row = jtbldetail.getSelectedRow();
        int col = jtbldetail.getSelectedColumn();

        setting_financial_rpt_detail1ext objd=new setting_financial_rpt_detail1ext();
        if (row > objds.size() - 1) {
            objd = new setting_financial_rpt_detail1ext();
            objd.setstatus(setting_financial_rpt_detail1ext.Status_Insert);
            objds.add(objd);
            System.out.println("row inserted");
        } else {
            objd = (setting_financial_rpt_detail1ext) objds.get(row);
            if (!objd.getstatus().equals(setting_financial_rpt_detail1ext.Status_Insert)&&!objd.getstatus().equals(setting_financial_rpt_detail1ext.Status_delete)){
                objd.setstatus(setting_financial_rpt_detail1ext.Status_update);
                System.out.println("row updated");
            }
        }

        objd.setrowno(GlobalUtils.toInt(GlobalUtils.churuf(model.getValueAt(row,0))));
        if (GlobalUtils.churuf(model.getValueAt(row,1)).equalsIgnoreCase("Header")){
            objd.setcolumntype("1");
        } else if (GlobalUtils.churuf(model.getValueAt(row,1)).equalsIgnoreCase("Detail")){
            objd.setcolumntype("2");
        } else {
            objd.setcolumntype("3");
        }
        objd.setlevelno(GlobalUtils.toInt(GlobalUtils.churuf(model.getValueAt(row,2))));
        objd.settextheader(GlobalUtils.churuf(model.getValueAt(row,3)));

        if (Boolean.parseBoolean(GlobalUtils.churuf(model.getValueAt(row, 4)))){
        objd.setallowformulation("Y");
        } else {
        objd.setallowformulation("N");
        }

        objd.settextformulation(GlobalUtils.churuf(model.getValueAt(row,5)));

        if (Boolean.parseBoolean(GlobalUtils.churuf(model.getValueAt(row, 7)))){
        objd.setshowdata("Y");
        } else {
        objd.setshowdata("N");
        }

        objd.setvisorder(GlobalUtils.toInt(GlobalUtils.churuf(model.getValueAt(row,6))));

        objds.set(row, objd);

    
}
}
