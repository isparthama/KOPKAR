/*
 * From Template
 *
 * Created on June 29, 2007, 2:00 PM
 * 
 * 
 * How to Call this Form on FrmMainFrame
 * Sample : 
 *    
 * import common.component.FrmCompany;
 * 
 * .......
 * 
 * 
 * FrmCompany frmCompany;
 * 
 * .......
 * 
 try {
        if (frmCompany == null) {
            frmmCompany = new FrmCompany(this);
        }
        
        showForm(frmCompany);
        
    }catch(Exception e) {
        e.printStackTrace();
    }
 * 
 */

package kopkar.in.component;


import classinterface.NavigatorFormInt;
import common.component.FrmMainFrame;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import kopkar.in.objectclasses.in_product_barcodeext;
import kopkar.in.objectclasses.in_product_discountext;
import kopkar.in.objectclasses.in_product_discountextcol;
import kopkar.in.objectclasses.in_product_inventoryext;
import kopkar.in.objectclasses.in_product_price_detailext;
import kopkar.in.objectclasses.in_product_price_detailextcol;
import kopkar.in.objectclasses.in_product_price_infoext;
import kopkar.in.objectclasses.in_product_priceext;
import kopkar.in.objectclasses.in_product_priceextcol;
import kopkar.in.objectclasses.in_productext;
import utils.CodeException;
import utils.GlobalUtils;
import kopkar.utils.browsecontroller;
import utils.GlobalModel;
import utils.selectallJTable;

/**
 *
 * @author  Generator
 */

public class Frmin_product_price_info extends javax.swing.JInternalFrame implements NavigatorFormInt {

    private static int istatus = 0;
    private static int iformtype = 0;
    public static String CLASSNAME="Frmin_product";

    
    String status="";
    
    FrmMainFrame mf ;

    in_product_price_infoext obj=new in_product_price_infoext();
    browsecontroller obrowse=new browsecontroller();
    private in_product_priceextcol product_price;
    private in_product_discountextcol product_discount;
    private in_product_price_detailextcol product_price_detail;
    private DefaultTableModel model_product_discount;
    private DefaultTableModel model_product_price_detail;
    private DefaultTableModel model_product_price;
   
    /** Creates new form Area */
    public Frmin_product_price_info() throws CodeException {
        initComponents();
    }
    
    public Frmin_product_price_info(FrmMainFrame mf) throws CodeException{
        this.mf = mf;
        initComponents();
        model_product_price=(DefaultTableModel) jtblproduct_price.getModel();
        model_product_discount=(DefaultTableModel) jtblproduct_discount.getModel();
        model_product_price_detail=(DefaultTableModel) jtblproduct_price_detail.getModel();
    }
     
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jHeader = new javax.swing.JLabel();
        HorizontalLine = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jlblproduct_code = new javax.swing.JLabel();
        jtxtproduct_code = new javax.swing.JTextField();
        jlblproduct_name = new javax.swing.JLabel();
        jtxtproduct_name = new javax.swing.JTextField();
        jtxtTanggalEntry = new javax.swing.JTextField();
        jtxtTanggalUpdate = new javax.swing.JTextField();
        jtxtUserID = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtblproduct_price = new selectallJTable(model_product_discount);
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblproduct_discount = new selectallJTable(model_product_discount);
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblproduct_price_detail = new selectallJTable(model_product_price_detail);
        jlblproduct_code1 = new javax.swing.JLabel();
        jtxtprice_code = new javax.swing.JTextField();
        jlblproduct_code_desc = new javax.swing.JLabel();
        jtxtprice_code_desc = new javax.swing.JTextField();
        status_chk = new javax.swing.JCheckBox();
        jbtnBrowse = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(true);
        setTitle("Product Price Info");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jHeader.setBackground(new java.awt.Color(102, 102, 102));
        jHeader.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jHeader.setForeground(new java.awt.Color(255, 255, 255));
        jHeader.setText(" : : Produk Info");
        jHeader.setAlignmentY(0.0F);
        jHeader.setOpaque(true);

        HorizontalLine.setForeground(new java.awt.Color(102, 102, 102));
        HorizontalLine.setAlignmentX(0.0F);
        HorizontalLine.setAlignmentY(0.0F);

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);

        jlblproduct_code.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblproduct_code.setText("Kode Product");

        jtxtproduct_code.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtproduct_code.setText("product_code");

        jlblproduct_name.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblproduct_name.setText("Nama Produk");

        jtxtproduct_name.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtproduct_name.setText("product_name");

        jtxtTanggalEntry.setEditable(false);
        jtxtTanggalEntry.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jtxtTanggalEntry.setText("TanggalEntry");

        jtxtTanggalUpdate.setEditable(false);
        jtxtTanggalUpdate.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jtxtTanggalUpdate.setText("TanggalUpdate");

        jtxtUserID.setEditable(false);
        jtxtUserID.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jtxtUserID.setText("UserID");

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTabbedPane1PropertyChange(evt);
            }
        });
        jTabbedPane1.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                jTabbedPane1VetoableChange(evt);
            }
        });

        jtblproduct_price.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Kode Harga", "Keterangan", "Harga"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblproduct_price.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jtblproduct_price.setSurrendersFocusOnKeystroke(true);
        jtblproduct_price.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblproduct_priceMouseClicked(evt);
            }
        });
        jtblproduct_price.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jtblproduct_pricePropertyChange(evt);
            }
        });
        jtblproduct_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtblproduct_priceKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jtblproduct_price);
        if (jtblproduct_price.getColumnModel().getColumnCount() > 0) {
            jtblproduct_price.getColumnModel().getColumn(0).setMinWidth(120);
            jtblproduct_price.getColumnModel().getColumn(0).setMaxWidth(120);
            jtblproduct_price.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Harga Utama", jPanel1);

        jtblproduct_discount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Kode Diskon", "Keterangan", "Diskon"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblproduct_discount.setSurrendersFocusOnKeystroke(true);
        jtblproduct_discount.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jtblproduct_discountPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(jtblproduct_discount);
        if (jtblproduct_discount.getColumnModel().getColumnCount() > 0) {
            jtblproduct_discount.getColumnModel().getColumn(0).setMinWidth(120);
            jtblproduct_discount.getColumnModel().getColumn(0).setMaxWidth(120);
            jtblproduct_discount.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Diskon", jPanel2);

        jtblproduct_price_detail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Satuan", "Keterangan", "Harga"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblproduct_price_detail.setSurrendersFocusOnKeystroke(true);
        jtblproduct_price_detail.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jtblproduct_price_detailPropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(jtblproduct_price_detail);
        if (jtblproduct_price_detail.getColumnModel().getColumnCount() > 0) {
            jtblproduct_price_detail.getColumnModel().getColumn(0).setMaxWidth(100);
            jtblproduct_price_detail.getColumnModel().getColumn(2).setMaxWidth(120);
        }

        jlblproduct_code1.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblproduct_code1.setText("Kode Harga");

        jtxtprice_code.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtprice_code.setText("price_code");
        jtxtprice_code.setFocusable(false);

        jlblproduct_code_desc.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblproduct_code_desc.setText("Keterangan");

        jtxtprice_code_desc.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtprice_code_desc.setText("price_code_desc");
        jtxtprice_code_desc.setFocusable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblproduct_code1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(jtxtprice_code, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(jtxtprice_code_desc, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jlblproduct_code_desc, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblproduct_code1)
                    .addComponent(jtxtprice_code, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtprice_code_desc, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblproduct_code_desc))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Harga Satuan Unit", jPanel3);

        status_chk.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        status_chk.setText("Aktif");
        status_chk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                status_chkActionPerformed(evt);
            }
        });

        jbtnBrowse.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jbtnBrowse.setText("...");
        jbtnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtxtTanggalEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jtxtTanggalUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jtxtUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(120, 120, 120)
                                        .addComponent(jtxtproduct_code, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jlblproduct_code, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addComponent(jbtnBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(status_chk, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 738, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap())
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(120, 120, 120)
                                        .addComponent(jtxtproduct_name, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jlblproduct_name, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(124, 124, 124)
                                .addComponent(HorizontalLine)
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtTanggalEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtTanggalUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(HorizontalLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(status_chk, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtxtproduct_code, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlblproduct_code)
                                    .addComponent(jbtnBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtproduct_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblproduct_name))
                        .addGap(7, 7, 7)
                        .addComponent(jTabbedPane1))
                    .addComponent(jSeparator3))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         try {
            moveFirst();

         } catch (CodeException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formInternalFrameOpened

private void kdatePurchaseDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kdatePurchaseDateFocusLost

}//GEN-LAST:event_kdatePurchaseDateFocusLost

private void kdatePurchaseDateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_kdatePurchaseDateCaretPositionChanged

}//GEN-LAST:event_kdatePurchaseDateCaretPositionChanged

private void kdatePurchaseDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kdatePurchaseDatePropertyChange

}//GEN-LAST:event_kdatePurchaseDatePropertyChange

private void status_chkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_status_chkActionPerformed
    // TODO add your handling code here:
}//GEN-LAST:event_status_chkActionPerformed

private void jtblproduct_discountPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jtblproduct_discountPropertyChange
    // TODO add your handling code here:
    int irow=jtblproduct_discount.getSelectedRow();
    int icol=jtblproduct_discount.getSelectedColumn();

    if (irow>-1){
        cekdetail_discount();
        jHeader.setText(" : : Product Info ("+product_discount.size()+")");
    }
}//GEN-LAST:event_jtblproduct_discountPropertyChange

private void jTabbedPane1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1PropertyChange
    // TODO add your handling code here:
    
}//GEN-LAST:event_jTabbedPane1PropertyChange

private void jTabbedPane1VetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_jTabbedPane1VetoableChange
    // TODO add your handling code here:
}//GEN-LAST:event_jTabbedPane1VetoableChange

private void jtblproduct_priceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblproduct_priceMouseClicked
        int irow=jtblproduct_price.getSelectedRow();
    // TODO add your handling code here:
    if (irow>-1){
    showproductpricedetail();
    }
}//GEN-LAST:event_jtblproduct_priceMouseClicked

private void jtblproduct_price_detailPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jtblproduct_price_detailPropertyChange
    // TODO add your handling code here:
    int irow=jtblproduct_price_detail.getSelectedRow();
    int icol=jtblproduct_price_detail.getSelectedColumn();

    if (irow>-1){
        cekdetail_price_detail();
        jHeader.setText(" : : Product Info ("+product_price_detail.size()+")");
    }
}//GEN-LAST:event_jtblproduct_price_detailPropertyChange

private void jtblproduct_pricePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jtblproduct_pricePropertyChange
    // TODO add your handling code here:
    int irow=jtblproduct_price.getSelectedRow();
    int icol=jtblproduct_price.getSelectedColumn();

    if (irow>-1){
        cekdetail_price();
        jHeader.setText(" : : Product Info ("+product_price.size()+")");
    }
}//GEN-LAST:event_jtblproduct_pricePropertyChange

private void jtblproduct_priceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtblproduct_priceKeyReleased
    // TODO add your handling code here:
    if (evt.getKeyCode()==evt.VK_UP||evt.getKeyCode()==evt.VK_DOWN){
        showproductpricedetail();
    }
}//GEN-LAST:event_jtblproduct_priceKeyReleased


private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {                                            
    setToolBar(iformtype,istatus);
    mf.setIcon(CLASSNAME);
}                                           

private void jbtnBrowseActionPerformed(java.awt.event.ActionEvent evt) {
    obrowse.showbrowser(obrowse.in_product, "", jtxtproduct_code);
    if (!jtxtproduct_code.getText().equalsIgnoreCase("")){
        try {
            findata(jtxtproduct_code.getText(),"");
        } catch (CodeException ex) {
            Logger.getLogger(Frmin_product_price_info.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}                                                                                 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Frmin_product_price_info().setVisible(true);
                } catch (CodeException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator HorizontalLine;
    private javax.swing.JLabel jHeader;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbtnBrowse;
    private javax.swing.JLabel jlblproduct_code;
    private javax.swing.JLabel jlblproduct_code1;
    private javax.swing.JLabel jlblproduct_code_desc;
    private javax.swing.JLabel jlblproduct_name;
    private javax.swing.JTable jtblproduct_discount;
    private javax.swing.JTable jtblproduct_price;
    private javax.swing.JTable jtblproduct_price_detail;
    private javax.swing.JTextField jtxtTanggalEntry;
    private javax.swing.JTextField jtxtTanggalUpdate;
    private javax.swing.JTextField jtxtUserID;
    private javax.swing.JTextField jtxtprice_code;
    private javax.swing.JTextField jtxtprice_code_desc;
    private javax.swing.JTextField jtxtproduct_code;
    private javax.swing.JTextField jtxtproduct_name;
    private javax.swing.JCheckBox status_chk;
    // End of variables declaration//GEN-END:variables

 
    public void moveFirst() throws CodeException {
        obj.moveFirst();
        
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void movePrevious() throws CodeException {
        obj.movePrevious();

        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveNext() throws CodeException {
        obj.moveNext();

        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveLast() throws CodeException {
        obj.moveLast();

        showData();
        mf.setIcon(CLASSNAME);
    }

    public void searchData() throws CodeException {
        showData();
        mf.setIcon(CLASSNAME);

    }

    private void clearfield(){
        //jtxtid.setText("");
        jtxtproduct_code.setText("");
        jtxtproduct_name.setText("");
        jtxtTanggalEntry.setText("");
        jtxtTanggalUpdate.setText("");
        jtxtUserID.setText("");
        jtxtprice_code.setText("");

        GlobalModel.clearRow(model_product_price);
        GlobalModel.clearRow(model_product_price_detail);
        GlobalModel.clearRow(model_product_discount);
    }

    public void newData() throws CodeException {
//        istatus=1;
//        clearfield();
//        setToolBar(iformtype,istatus);
    }

    public void saveData() throws CodeException {
        setData();
        obj.update();
        showData();

        istatus = 0;
        setToolBar(iformtype,istatus);
        mf.setIcon(CLASSNAME);
    }

    public void showData() throws CodeException {
        setToolBar(iformtype,istatus);
        setCursor(GlobalUtils.HOURGLASSCURSOR);

        //jtxtid.setText(obj.getid().toString());
        jtxtproduct_code.setText(obj.getproduct_code());
        jtxtproduct_name.setText(obj.getproduct_name());
        jtxtTanggalEntry.setText(GlobalUtils.churuf(obj.getentrydate()));
        jtxtTanggalUpdate.setText(GlobalUtils.churuf(obj.getauditdate()));
        jtxtUserID.setText(obj.getaudituser());

        product_price=obj.getproduct_price();
        showprice();
        product_discount=obj.getproduct_discount();
        showdiscount();

        setCursor(GlobalUtils.NORMALCURSOR);
    }

    public void delete() throws CodeException {
        if (obj.delete()){
            obj.moveNext();
            showData();
        }
        mf.setIcon(CLASSNAME);
    }

    public void setToolBar(int iFormType, int istatus) {
        mf.setToolBar(iformtype,istatus);

        if (istatus==1){
            jbtnBrowse.setEnabled(false);
        } else {
            jbtnBrowse.setEnabled(true);
        }
    }

    public void setData() throws CodeException {
        if (istatus==1){
            obj.insert();
        }
        obj.setproduct_code(jtxtproduct_code.getText());
        obj.setproduct_name(jtxtproduct_name.getText());
        obj.setactive_sts(status);

    }

    public void undo() throws CodeException {
        istatus = 0;
        showData();
    }

    public void execute() throws CodeException {
       saveData();
    }

    public void printData() throws CodeException {
    }

    public void importCsv() throws CodeException {
            

    }

    public void exportCsv() throws CodeException {
        
        
    }

    public void importText() throws CodeException {
        
    }

    public void exportText() throws CodeException {
        
    }

    private void showdiscount() {
        GlobalModel.clearRow(model_product_discount);
        for (int i=0;i<product_discount.size();i++){
            in_product_discountext o = product_discount.get(i);
            model_product_discount.addRow(new Object[model_product_discount.getColumnCount()]);
            model_product_discount.setValueAt(o.getdiscount_code(), i, 0);
            model_product_discount.setValueAt(o.getdiscount_desc(), i, 1);
            model_product_discount.setValueAt(o.getdiscount(), i, 2);
        }
    }

    private void showproductpricedetail() {
        int irow=jtblproduct_price.getSelectedRow();
        if (irow>-1){
            in_product_priceext oprice = product_price.get(irow);
            jtxtprice_code.setText(oprice.getprice_code());
            jtxtprice_code_desc.setText(oprice.getprice_desc());
            oprice.retrieveproduct_price_detail();
            product_price_detail=oprice.getproduct_price_detail();
            GlobalModel.clearRow(model_product_price_detail);
            for (int i=0;i<product_price_detail.size();i++){
                in_product_price_detailext o = product_price_detail.get(i);
                model_product_price_detail.addRow(new Object[model_product_price_detail.getColumnCount()]);
                model_product_price_detail.setValueAt(o.getuom_id_desc(), i, 0);
                model_product_price_detail.setValueAt(o.getuom_code(), i, 1);
                model_product_price_detail.setValueAt(o.getprice(), i, 2);
            }

            oprice.setproduct_price_detail(product_price_detail);
            product_price.set(irow, oprice);
        }
    }

    private void cekdetail_price() {
        int row = jtblproduct_price.getSelectedRow();
        int col = jtblproduct_price.getSelectedColumn();

        in_product_priceext o = new in_product_priceext(obj.getproduct_code());
        if (row > product_price.size() - 1) {
            o = new in_product_priceext(obj.getproduct_code());
            o.setstatus(in_product_barcodeext.Status_Insert);
            product_price.add(o);
        } else {
            o = (in_product_priceext) product_price.get(row);
            if (!o.getstatus().equals(in_product_barcodeext.Status_Insert)&&!o.getstatus().equals(in_product_barcodeext.Status_delete)){
                o.setstatus(in_product_barcodeext.Status_update);
            }
        }

        o.setprice(GlobalUtils.toDbl(GlobalUtils.churuf(model_product_price.getValueAt(row, 2))));
        product_price.set(row, o);

    }

    private void cekdetail_discount() {
        int row = jtblproduct_discount.getSelectedRow();
        int col = jtblproduct_discount.getSelectedColumn();


        in_product_discountext appod=new in_product_discountext();
        if (row > product_discount.size() - 1) {
            appod = new in_product_discountext();
            appod.setstatus(in_product_discountext.Status_Insert);
            product_discount.add(appod);
        } else {
            appod = (in_product_discountext) product_discount.get(row);
            if (!appod.getstatus().equals(in_product_barcodeext.Status_Insert)&&!appod.getstatus().equals(in_product_barcodeext.Status_delete)){
                appod.setstatus(in_product_barcodeext.Status_update);
            }
        }
        appod.setdiscount(GlobalUtils.toDbl(GlobalUtils.churuf(model_product_discount.getValueAt(row, 2))));
        product_discount.set(row, appod);
    }

    private void showprice() {
        GlobalModel.clearRow(model_product_price);
        for (int i=0;i<product_price.size();i++){
            in_product_priceext o = product_price.get(i);
            model_product_price.addRow(new Object[model_product_price.getColumnCount()]);
            model_product_price.setValueAt(o.getprice_code(), i, 0);
            model_product_price.setValueAt(o.getprice_desc(), i, 1);
            model_product_price.setValueAt(o.getprice(), i, 2);
        }
        if (jtblproduct_price.getRowCount()>0){
            GlobalUtils.selectCellTable(jtblproduct_price, 0, 0);
            showproductpricedetail();
        }
    }

    private void cekdetail_price_detail() {
        int row = jtblproduct_price_detail.getSelectedRow();
        int col = jtblproduct_price_detail.getSelectedColumn();
        if (jtblproduct_price.getSelectedRow()>-1){
            in_product_priceext oprice = product_price.get(jtblproduct_price.getSelectedRow());

            in_product_price_detailext o = new in_product_price_detailext();
            if (row > product_price_detail.size() - 1) {
                o = new in_product_price_detailext();
                o.setstatus(in_product_barcodeext.Status_Insert);
                product_price_detail.add(o);
            } else {
                o = (in_product_price_detailext) product_price_detail.get(row);
                if (!o.getstatus().equals(in_product_barcodeext.Status_Insert)&&!o.getstatus().equals(in_product_barcodeext.Status_delete)){
                    o.setstatus(in_product_barcodeext.Status_update);
                }
            }

            o.setprice(GlobalUtils.toDbl(GlobalUtils.churuf(model_product_price_detail.getValueAt(row, 2))));
            product_price_detail.set(row, o);
            oprice.setproduct_price_detail(product_price_detail);
            oprice.setstatus(oprice.Status_update);
            product_price.set(jtblproduct_price.getSelectedRow(), oprice);
        }
    }

    public void findata(String product_code,String price_code) throws CodeException {
        if (obj.initdata(product_code)){
                showData();
        }
        
        if (price_code.length()>0)
        searchintable(price_code);
    }

    private void searchintable(String price_code) {
        for (int i=0;i<jtblproduct_price.getRowCount();i++){
            String strprice_code=GlobalUtils.churuf(jtblproduct_price.getValueAt(i, 0));
            if (strprice_code.equalsIgnoreCase(price_code)){
                GlobalUtils.selectCellTable(jtblproduct_price, i, 0);
                break;
            }
        }
    }

    
}
