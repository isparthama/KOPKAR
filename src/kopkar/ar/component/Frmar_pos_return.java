/*
 * From ar_pos_return
 *
 * Created on June 29, 2007, 2:00 PM
 * 
 * 
 * How to Call this Form on FrmMainFrame
 * Sample : 
 *    
 * import common.component.FrmCompany;
 * 
 * .......
 * 
 * 
 * FrmCompany frmCompany;
 * 
 * .......
 * 
 try {
        if (frmCompany == null) {
            frmmCompany = new FrmCompany(this);
        }
        
        showForm(frmCompany);
        
    }catch(Exception e) {
        e.printStackTrace();
    }
 * 
 */

package kopkar.ar.component;


import classinterface.NavigatorFormInt;
import common.component.FrmMainFrame;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.util.HashMap;
import java.util.Map;
import kopkar.ar.objectclasses.ar_pos_returnext;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import kopkar.ar.objectclasses.ar_pos_return_detail1ext;
import kopkar.ar.objectclasses.ar_pos_return_detail1extcol;
import kopkar.ar.objectclasses.ar_customerext;
import kopkar.ar.objectclasses.ar_pos_optionext;
import kopkar.ar.objectclasses.ar_pos_salesext;
import kopkar.in.objectclasses.in_product_findcls;
import kopkar.in.objectclasses.in_warehouseext;
import kopkar.utils.browsecontroller;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import org.kazao.calendar.KazaoCalendarDateTimeException;
import utils.CodeException;
import utils.GlobalModel;
import utils.GlobalUtils;
import utils.appsettinghandler;
import utils.selectallJTable;

/**
 *
 * @author  Generator
 */

public class Frmar_pos_return extends javax.swing.JInternalFrame implements NavigatorFormInt {
    int product_show_validate=1;
    int product_show_from_text=2;
    int product_show_from_table=3;

    private static int istatus = 0;
    private static int iformtype = 0;
    public static String CLASSNAME="Frmar_pos_return";
    
    FrmMainFrame mf ;

    ar_pos_returnext obj=new ar_pos_returnext();
    ar_pos_return_detail1extcol appods;
    browsecontroller obrowse=new browsecontroller();
    private ar_customerext oar_customer;

    DefaultTableModel model=null;
    private ar_pos_returnext objtmp;
    private in_product_findcls oin_product;
    private HashMap parameter;
    private JasperReport jasperReport;
    private JasperPrint jasperPrint;
   
    /** Creates new form Area */
    public Frmar_pos_return() throws CodeException {
        initComponents();
    }
    
    public Frmar_pos_return(FrmMainFrame mf) throws CodeException{
        this.mf = mf;
        initComponents();

        model=(DefaultTableModel) jtbldetail.getModel();

        TableColumn uomColumn = jtbldetail.getColumnModel().getColumn(3);

        JComboBox comboBox = new JComboBox();
        comboBox.setFont( new Font("Dialog", Font.PLAIN, 10));
        comboBox.addItem("Pieces");
        comboBox.addItem("Inner");
        comboBox.addItem("Box");

        uomColumn.setCellEditor(new DefaultCellEditor(comboBox));

    }
     
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jHeader = new javax.swing.JLabel();
        HorizontalLine = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jbtnBrowseDocument_Number = new javax.swing.JButton();
        jlbldocument_number = new javax.swing.JLabel();
        jtxtdocument_number = new javax.swing.JTextField();
        jlbldocument_status = new javax.swing.JLabel();
        jtxtdocument_status = new javax.swing.JTextField();
        jlbldocument_date = new javax.swing.JLabel();
        jlbldocument_duedate = new javax.swing.JLabel();
        jtxtcustomer_code = new javax.swing.JTextField();
        jlblreference = new javax.swing.JLabel();
        jtxtreference = new javax.swing.JTextField();
        jlbldscription = new javax.swing.JLabel();
        jtxtdscription = new javax.swing.JTextField();
        jtxtjumlah_item = new javax.swing.JTextField();
        jtxttotal_aft_tax = new javax.swing.JTextField();
        jtxtTanggalEntry = new javax.swing.JTextField();
        jtxtTanggalUpdate = new javax.swing.JTextField();
        jtxtUserID = new javax.swing.JTextField();
        jlblsupplier_code2 = new javax.swing.JLabel();
        jbtnsupplier_code = new javax.swing.JButton();
        jtxtcustomer_name = new javax.swing.JTextField();
        kzodocument_date = new org.kazao.calendar.KazaoCalendarDate();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbldetail = new selectallJTable(model);
        jtxtfaktur_sebelum_no = new javax.swing.JTextField();
        jlbldscription1 = new javax.swing.JLabel();
        jtxtfaktur_sebelum_amount = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jlblsupplier_code3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jlblsupplier_code4 = new javax.swing.JLabel();
        jlblsupplier_code5 = new javax.swing.JLabel();
        jlblsupplier_code6 = new javax.swing.JLabel();
        jlblsupplier_code7 = new javax.swing.JLabel();
        jlbldscription2 = new javax.swing.JLabel();
        jtxtreference_number = new javax.swing.JTextField();
        jbtnsupplier_code1 = new javax.swing.JButton();
        jlblsupplier_code8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Point Of Sales");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        jHeader.setBackground(new java.awt.Color(102, 102, 102));
        jHeader.setFont(new java.awt.Font("Dialog", 1, 10));
        jHeader.setForeground(new java.awt.Color(255, 255, 255));
        jHeader.setText(" : : Point Of Sales");
        jHeader.setAlignmentY(0.0F);
        jHeader.setOpaque(true);
        getContentPane().add(jHeader);
        jHeader.setBounds(30, 30, 200, 20);

        HorizontalLine.setForeground(new java.awt.Color(102, 102, 102));
        HorizontalLine.setAlignmentX(0.0F);
        HorizontalLine.setAlignmentY(0.0F);
        getContentPane().add(HorizontalLine);
        HorizontalLine.setBounds(160, 46, 750, 10);

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(30, 50, 6, 400);

        jbtnBrowseDocument_Number.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowseDocument_Number.setText("...");
        jbtnBrowseDocument_Number.setFocusable(false);
        jbtnBrowseDocument_Number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseDocument_NumberActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowseDocument_Number);
        jbtnBrowseDocument_Number.setBounds(1030, 80, 30, 17);

        jlbldocument_number.setFont(new java.awt.Font("Dialog", 1, 10));
        jlbldocument_number.setText("No. Faktur");
        getContentPane().add(jlbldocument_number);
        jlbldocument_number.setBounds(690, 80, 140, 13);

        jtxtdocument_number.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtdocument_number.setText("document_number");
        jtxtdocument_number.setFocusable(false);
        jtxtdocument_number.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtdocument_numberFocusGained(evt);
            }
        });
        getContentPane().add(jtxtdocument_number);
        jtxtdocument_number.setBounds(880, 80, 150, 23);

        jlbldocument_status.setFont(new java.awt.Font("Dialog", 1, 10));
        jlbldocument_status.setText("Loket");
        getContentPane().add(jlbldocument_status);
        jlbldocument_status.setBounds(690, 60, 140, 13);

        jtxtdocument_status.setEditable(false);
        jtxtdocument_status.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtdocument_status.setText("document_status");
        jtxtdocument_status.setFocusable(false);
        jtxtdocument_status.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtdocument_statusFocusGained(evt);
            }
        });
        getContentPane().add(jtxtdocument_status);
        jtxtdocument_status.setBounds(880, 60, 150, 23);

        jlbldocument_date.setFont(new java.awt.Font("Dialog", 1, 10));
        jlbldocument_date.setText("Hari. Tanggal");
        getContentPane().add(jlbldocument_date);
        jlbldocument_date.setBounds(690, 100, 140, 13);

        jlbldocument_duedate.setFont(new java.awt.Font("Dialog", 1, 10));
        jlbldocument_duedate.setText("Jam");
        getContentPane().add(jlbldocument_duedate);
        jlbldocument_duedate.setBounds(690, 120, 140, 13);

        jtxtcustomer_code.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtcustomer_code.setText("customer_code");
        jtxtcustomer_code.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtcustomer_codeFocusGained(evt);
            }
        });
        jtxtcustomer_code.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtcustomer_codeKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtcustomer_code);
        jtxtcustomer_code.setBounds(790, 160, 150, 23);

        jlblreference.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblreference.setText("Kasir");
        getContentPane().add(jlblreference);
        jlblreference.setBounds(70, 460, 140, 13);

        jtxtreference.setEditable(false);
        jtxtreference.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtreference.setText("reference");
        jtxtreference.setFocusable(false);
        jtxtreference.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtreferenceFocusGained(evt);
            }
        });
        getContentPane().add(jtxtreference);
        jtxtreference.setBounds(260, 460, 70, 23);

        jlbldscription.setFont(new java.awt.Font("Dialog", 1, 10));
        jlbldscription.setText("Faktur Sebelumnnya");
        getContentPane().add(jlbldscription);
        jlbldscription.setBounds(70, 480, 140, 13);

        jtxtdscription.setEditable(false);
        jtxtdscription.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtdscription.setText("dscription");
        jtxtdscription.setFocusable(false);
        jtxtdscription.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtdscriptionFocusGained(evt);
            }
        });
        getContentPane().add(jtxtdscription);
        jtxtdscription.setBounds(330, 460, 180, 23);

        jtxtjumlah_item.setEditable(false);
        jtxtjumlah_item.setFont(new java.awt.Font("Dialog", 1, 48));
        jtxtjumlah_item.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtjumlah_item.setText("tax_amount");
        jtxtjumlah_item.setFocusable(false);
        getContentPane().add(jtxtjumlah_item);
        jtxtjumlah_item.setBounds(520, 460, 150, 70);

        jtxttotal_aft_tax.setEditable(false);
        jtxttotal_aft_tax.setFont(new java.awt.Font("Dialog", 1, 48));
        jtxttotal_aft_tax.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxttotal_aft_tax.setText("total_aft_tax");
        jtxttotal_aft_tax.setFocusable(false);
        jtxttotal_aft_tax.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxttotal_aft_taxFocusGained(evt);
            }
        });
        getContentPane().add(jtxttotal_aft_tax);
        jtxttotal_aft_tax.setBounds(670, 460, 370, 70);

        jtxtTanggalEntry.setEditable(false);
        jtxtTanggalEntry.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtTanggalEntry.setText("TanggalEntry");
        jtxtTanggalEntry.setFocusable(false);
        getContentPane().add(jtxtTanggalEntry);
        jtxtTanggalEntry.setBounds(620, 30, 170, 20);

        jtxtTanggalUpdate.setEditable(false);
        jtxtTanggalUpdate.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtTanggalUpdate.setText("TanggalUpdate");
        jtxtTanggalUpdate.setFocusable(false);
        getContentPane().add(jtxtTanggalUpdate);
        jtxtTanggalUpdate.setBounds(790, 30, 130, 20);

        jtxtUserID.setEditable(false);
        jtxtUserID.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtUserID.setText("UserID");
        jtxtUserID.setFocusable(false);
        getContentPane().add(jtxtUserID);
        jtxtUserID.setBounds(920, 30, 140, 20);

        jlblsupplier_code2.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblsupplier_code2.setText("Nama Pelanggan");
        getContentPane().add(jlblsupplier_code2);
        jlblsupplier_code2.setBounds(650, 180, 140, 13);

        jbtnsupplier_code.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnsupplier_code.setText("...");
        jbtnsupplier_code.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnsupplier_codeActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnsupplier_code);
        jbtnsupplier_code.setBounds(940, 160, 30, 17);

        jtxtcustomer_name.setEditable(false);
        jtxtcustomer_name.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtcustomer_name.setText("jTextField1");
        jtxtcustomer_name.setFocusable(false);
        getContentPane().add(jtxtcustomer_name);
        jtxtcustomer_name.setBounds(790, 180, 270, 20);

        kzodocument_date.setEnabled(false);
        kzodocument_date.setFocusable(false);
        kzodocument_date.setFont(new java.awt.Font("Dialog", 0, 10));
        kzodocument_date.setFontDate(new java.awt.Font("Dialog", 0, 10));
        kzodocument_date.setOpaque(false);
        getContentPane().add(kzodocument_date);
        kzodocument_date.setBounds(880, 100, 100, 20);

        jtbldetail.setFont(new java.awt.Font("Dialog", 0, 10));
        jtbldetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "Kode Barang", "Nama Barang", "UOM", "Jumlah", "Satuan", "Harga", "Total", "Potongan", "Sub Total", "TotalPcs"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, true, true, true, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbldetail.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtbldetail.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jtbldetail.setSurrendersFocusOnKeystroke(true);
        jtbldetail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtbldetailFocusGained(evt);
            }
        });
        jtbldetail.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jtbldetailPropertyChange(evt);
            }
        });
        jtbldetail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtbldetailKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtbldetailKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jtbldetail);
        jtbldetail.getColumnModel().getColumn(0).setMinWidth(50);
        jtbldetail.getColumnModel().getColumn(0).setPreferredWidth(50);
        jtbldetail.getColumnModel().getColumn(0).setMaxWidth(50);
        jtbldetail.getColumnModel().getColumn(1).setMinWidth(120);
        jtbldetail.getColumnModel().getColumn(1).setPreferredWidth(120);
        jtbldetail.getColumnModel().getColumn(1).setMaxWidth(120);
        jtbldetail.getColumnModel().getColumn(2).setMinWidth(200);
        jtbldetail.getColumnModel().getColumn(2).setPreferredWidth(200);
        jtbldetail.getColumnModel().getColumn(2).setMaxWidth(200);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(70, 200, 990, 250);

        jtxtfaktur_sebelum_no.setEditable(false);
        jtxtfaktur_sebelum_no.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtfaktur_sebelum_no.setText("document_number");
        jtxtfaktur_sebelum_no.setFocusable(false);
        jtxtfaktur_sebelum_no.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtfaktur_sebelum_noFocusGained(evt);
            }
        });
        getContentPane().add(jtxtfaktur_sebelum_no);
        jtxtfaktur_sebelum_no.setBounds(260, 480, 150, 23);

        jlbldscription1.setFont(new java.awt.Font("Dialog", 1, 10));
        jlbldscription1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbldscription1.setText("F2:Data Baru         F3:Batal         F4:RePrint         F5:Daftar Produk         F6:Daftar Transaksi         F7:Layar Baru         F8:Retur         F11:Tutup Kasir         F12:Bayar         Esc : Keluar");
        getContentPane().add(jlbldscription1);
        jlbldscription1.setBounds(10, 540, 1040, 13);

        jtxtfaktur_sebelum_amount.setEditable(false);
        jtxtfaktur_sebelum_amount.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtfaktur_sebelum_amount.setText("document_number");
        jtxtfaktur_sebelum_amount.setFocusable(false);
        jtxtfaktur_sebelum_amount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtfaktur_sebelum_amountFocusGained(evt);
            }
        });
        getContentPane().add(jtxtfaktur_sebelum_amount);
        jtxtfaktur_sebelum_amount.setBounds(260, 500, 150, 23);

        jTextField1.setFont(new java.awt.Font("Ubuntu", 1, 24));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("Ketik / Browse Master Produk");
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(70, 148, 520, 50);

        jlblsupplier_code3.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblsupplier_code3.setText("Kode Pelanggan");
        getContentPane().add(jlblsupplier_code3);
        jlblsupplier_code3.setBounds(650, 160, 140, 13);

        jComboBox1.setFont(new java.awt.Font("Dialog", 0, 10));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pieces", "Inner", "Box" }));
        jComboBox1.setNextFocusableComponent(jTextField1);
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(240, 128, 150, 20);

        jlblsupplier_code4.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblsupplier_code4.setText("Satuan");
        getContentPane().add(jlblsupplier_code4);
        jlblsupplier_code4.setBounds(70, 130, 140, 13);

        jlblsupplier_code5.setFont(new java.awt.Font("Dialog", 1, 12));
        jlblsupplier_code5.setText("Kopkar Mulia Jaya");
        getContentPane().add(jlblsupplier_code5);
        jlblsupplier_code5.setBounds(70, 60, 140, 15);

        jlblsupplier_code6.setFont(new java.awt.Font("Dialog", 0, 10));
        jlblsupplier_code6.setText("Jl. Permai Raya no 12");
        getContentPane().add(jlblsupplier_code6);
        jlblsupplier_code6.setBounds(70, 80, 140, 13);

        jlblsupplier_code7.setFont(new java.awt.Font("Dialog", 0, 10));
        jlblsupplier_code7.setText("Telp. 021-676565343 Fax 45272727");
        getContentPane().add(jlblsupplier_code7);
        jlblsupplier_code7.setBounds(70, 100, 260, 13);

        jlbldscription2.setFont(new java.awt.Font("Dialog", 1, 10));
        jlbldscription2.setText("Nilai Faktur Sebelumnnya");
        getContentPane().add(jlbldscription2);
        jlbldscription2.setBounds(70, 500, 180, 13);

        jtxtreference_number.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtreference_number.setText("customer_code");
        jtxtreference_number.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtreference_numberFocusGained(evt);
            }
        });
        jtxtreference_number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtreference_numberKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtreference_number);
        jtxtreference_number.setBounds(790, 140, 150, 23);

        jbtnsupplier_code1.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnsupplier_code1.setText("...");
        jbtnsupplier_code1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnsupplier_code1ActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnsupplier_code1);
        jbtnsupplier_code1.setBounds(940, 140, 30, 17);

        jlblsupplier_code8.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblsupplier_code8.setText("No. Referensi");
        getContentPane().add(jlblsupplier_code8);
        jlblsupplier_code8.setBounds(650, 140, 140, 13);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         try {
            moveFirst();

         } catch (CodeException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formInternalFrameOpened

private void kdatePurchaseDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kdatePurchaseDateFocusLost

}//GEN-LAST:event_kdatePurchaseDateFocusLost

private void kdatePurchaseDateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_kdatePurchaseDateCaretPositionChanged

}//GEN-LAST:event_kdatePurchaseDateCaretPositionChanged

private void kdatePurchaseDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kdatePurchaseDatePropertyChange

}//GEN-LAST:event_kdatePurchaseDatePropertyChange

private void jbtnBrowseDocument_NumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseDocument_NumberActionPerformed
    // TODO add your handling code here:
    obrowse.showbrowser(obrowse.ar_pos_return, "", jtxtdocument_number);
        try {
            if (!jtxtdocument_number.getText().equalsIgnoreCase("")){
                obj.initdata(jtxtdocument_number.getText());
                showData();
            }
        } catch (CodeException ex) {
            Logger.getLogger(Frmar_pos_return.class.getName()).log(Level.SEVERE, null, ex);
        }
    
}//GEN-LAST:event_jbtnBrowseDocument_NumberActionPerformed

private void jbtnsupplier_codeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnsupplier_codeActionPerformed
    // TODO add your handling code here:
    obrowse.showbrowser(obrowse.ar_customer, "", jtxtcustomer_code);

    if (!jtxtcustomer_code.getText().equalsIgnoreCase("")){
        showdatacustomer();

    }

}//GEN-LAST:event_jbtnsupplier_codeActionPerformed

private void jtbldetailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtbldetailFocusGained
    // TODO add your handling code here:
    if (jtbldetail.getRowCount()==0){
        insertnewlastrow();
    }
}//GEN-LAST:event_jtbldetailFocusGained

private void jtbldetailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtbldetailKeyPressed
    // TODO add your handling code here:
    int col=jtbldetail.getSelectedColumn();
    int row=jtbldetail.getSelectedRow();
    switch (evt.getKeyCode()){
        case KeyEvent.VK_ESCAPE:
            evt.consume();
            jTextField1.requestFocus();
            break;
        case KeyEvent.VK_F5:
            evt.consume();
            switch (jtbldetail.getSelectedColumn()){
                case 1:
                    obrowse.showbrowser(obrowse.in_product, "", jtbldetail);
                    showproduct(this.product_show_from_table,(Integer)jtbldetail.getSelectedRow());
                    jtbldetailPropertyChange(null);
                    GlobalUtils.selectCellTable(jtbldetail, row, 4);
                    break;
            }
            break;
        case KeyEvent.VK_INSERT:
            evt.consume();
            insertnewlastrow();
            break;
        case KeyEvent.VK_DELETE:
            evt.consume();
            if (jtbldetail.getSelectedRow()<appods.size()){
                ar_pos_return_detail1ext o = appods.get(jtbldetail.getSelectedRow());
                if (o.getstatus().equals(o.Status_Insert)){
                    appods.remove(row);
                    obj.setDetail1(appods);
                    model.removeRow(row);
                    displaytotal();
                } else {
                    o.setstatus(ar_pos_return_detail1ext.Status_delete);
                }
            }
            if (row+1>model.getRowCount()){
                if (model.getRowCount()==0){
                    jTextField1.requestFocus();
                } else {
                    GlobalUtils.selectCellTable(jtbldetail, model.getRowCount()-1, col);
                }
            } else {
                jtbldetailPropertyChange(null);
            }
            break;
        case KeyEvent.VK_ENTER:
            evt.consume();
            break;
    }
}//GEN-LAST:event_jtbldetailKeyPressed

private void jtbldetailPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jtbldetailPropertyChange
    // TODO add your handling code here:
    int irow=jtbldetail.getSelectedRow();
    int icol=jtbldetail.getSelectedColumn();

    if (irow>-1){
        switch (icol){
            case 3:
                showproduct(this.product_show_from_table,irow);
                break;
        }
        cekdetail();
        displaytotal();
    }
}//GEN-LAST:event_jtbldetailPropertyChange

private void displaytotal(){
    obj.calculatetotal();
    jtxtjumlah_item.setText(GlobalUtils.formatnumber(obj.getDetail1().size()));
    jtxtjumlah_item.setText(GlobalUtils.formatnumber(obj.gettotal_quantity()));
    jtxttotal_aft_tax.setText(GlobalUtils.formatnumber(obj.gettotal_aft_discount()));
    jHeader.setText(" : : Order Pembelian ("+appods.size()+")");
}
private void jtbldetailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtbldetailKeyReleased
        int col=jtbldetail.getSelectedColumn();
        int row=jtbldetail.getSelectedRow();
    // TODO add your handling code here:
        if (evt.getKeyCode()==evt.VK_ENTER&&row>-1){
            switch (col){
                case 1:
                    showproduct(this.product_show_from_table,row);
                    jtbldetailPropertyChange(null);
                    GlobalUtils.selectCellTable(jtbldetail, row, 4);
                    break;
                case 4:
                    //insertnewlastrow();
                    jTextField1.requestFocus();
                    break;
                case 8:
                    //insertnewlastrow();
                    jTextField1.requestFocus();
                    break;
            }
        }
}//GEN-LAST:event_jtbldetailKeyReleased

private void jtxtcustomer_codeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtcustomer_codeFocusGained
    // TODO add your handling code here:
    jtxtcustomer_code.setSelectionStart(0);
    jtxtcustomer_code.setSelectionEnd(jtxtcustomer_code.getText().length());
}//GEN-LAST:event_jtxtcustomer_codeFocusGained

private void jtxtfaktur_sebelum_noFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfaktur_sebelum_noFocusGained
    // TODO add your handling code here:
}//GEN-LAST:event_jtxtfaktur_sebelum_noFocusGained

private void jtxtfaktur_sebelum_amountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfaktur_sebelum_amountFocusGained
    // TODO add your handling code here:
}//GEN-LAST:event_jtxtfaktur_sebelum_amountFocusGained

private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
    // TODO add your handling code here:
    jTextField1.setSelectionStart(0);
    jTextField1.setSelectionEnd(jTextField1.getText().length());
}//GEN-LAST:event_jTextField1FocusGained

private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
    // TODO add your handling code here:
    dokeypress(evt);
}//GEN-LAST:event_jComboBox1KeyPressed

private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
    // TODO add your handling code here:
    dokeypress(evt);
    switch (evt.getKeyCode()){
        case KeyEvent.VK_ENTER:
            if (showproduct(this.product_show_validate, -1)){
                insertnewlastrow();
                model.setValueAt(jTextField1.getText(), model.getRowCount()-1, 1);
                showproduct(this.product_show_from_text, model.getRowCount()-1);
                jtbldetailPropertyChange(null);
            }
            break;
        case KeyEvent.VK_DOWN:
            if (model.getRowCount()>0){
                GlobalUtils.selectCellTable(jtbldetail,0, 1);
                jtbldetail.requestFocus();
            }
            break;
    }
}//GEN-LAST:event_jTextField1KeyPressed

private void jtxtcustomer_codeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtcustomer_codeKeyPressed
    // TODO add your handling code here:
    dokeypress(evt);
}//GEN-LAST:event_jtxtcustomer_codeKeyPressed

private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
    // TODO add your handling code here:
    jTextField1.requestFocus();
}//GEN-LAST:event_jComboBox1ItemStateChanged

private void jtxtreference_numberFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtreference_numberFocusGained
    // TODO add your handling code here:
}//GEN-LAST:event_jtxtreference_numberFocusGained

private void jtxtreference_numberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtreference_numberKeyPressed
    // TODO add your handling code here:
}//GEN-LAST:event_jtxtreference_numberKeyPressed

private void jbtnsupplier_code1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnsupplier_code1ActionPerformed
    // TODO add your handling code here:
    obrowse=new browsecontroller();
    obrowse.showbrowser(obrowse.ar_pos_sales, "document_status='O'", jtxtreference_number);
    ar_pos_salesext objsales;
    obj.setDetail1(new ar_pos_return_detail1extcol(obj.getdocentry()));
    if (!jtxtreference_number.getText().equalsIgnoreCase("")){
            try {
                objsales=new ar_pos_salesext();
                if (objsales.initdata(jtxtreference_number.getText())) {
                    if (obj.getrefdata(objsales)){
                        showData();
                    }
                }
            } catch (CodeException ex) {
                Logger.getLogger(Frmar_pos_return.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
}//GEN-LAST:event_jbtnsupplier_code1ActionPerformed
                         

private void jtxtdocument_numberFocusGained(java.awt.event.FocusEvent evt) {                                             
        // TODO add your handling code here:
    jtxtdocument_number.setSelectionStart(0);
    jtxtdocument_number.setSelectionEnd(jtxtdocument_number.getText().length());
}                                               

private void jtxtdocument_statusFocusGained(java.awt.event.FocusEvent evt) {                                             
        // TODO add your handling code here:
    jtxtdocument_status.setSelectionStart(0);
    jtxtdocument_status.setSelectionEnd(jtxtdocument_status.getText().length());
}                                                                                                                                      

private void jtxtreferenceFocusGained(java.awt.event.FocusEvent evt) {                                       
        // TODO add your handling code here:
    jtxtreference.setSelectionStart(0);
    jtxtreference.setSelectionEnd(jtxtreference.getText().length());
}                                         

private void jtxtdscriptionFocusGained(java.awt.event.FocusEvent evt) {                                        
        // TODO add your handling code here:
    jtxtdscription.setSelectionStart(0);
    jtxtdscription.setSelectionEnd(jtxtdscription.getText().length());
}                                                                                    


private void jtxttotal_aft_taxFocusGained(java.awt.event.FocusEvent evt) {                                           
        // TODO add your handling code here:
    jtxttotal_aft_tax.setSelectionStart(0);
    jtxttotal_aft_tax.setSelectionEnd(jtxttotal_aft_tax.getText().length());
}                                             


private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {                                            
    setToolBar(iformtype,istatus);
    mf.setIcon(CLASSNAME);
}                                           

                                                                                

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Frmar_pos_return().setVisible(true);
                } catch (CodeException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator HorizontalLine;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jHeader;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton jbtnBrowseDocument_Number;
    private javax.swing.JButton jbtnsupplier_code;
    private javax.swing.JButton jbtnsupplier_code1;
    private javax.swing.JLabel jlbldocument_date;
    private javax.swing.JLabel jlbldocument_duedate;
    private javax.swing.JLabel jlbldocument_number;
    private javax.swing.JLabel jlbldocument_status;
    private javax.swing.JLabel jlbldscription;
    private javax.swing.JLabel jlbldscription1;
    private javax.swing.JLabel jlbldscription2;
    private javax.swing.JLabel jlblreference;
    private javax.swing.JLabel jlblsupplier_code2;
    private javax.swing.JLabel jlblsupplier_code3;
    private javax.swing.JLabel jlblsupplier_code4;
    private javax.swing.JLabel jlblsupplier_code5;
    private javax.swing.JLabel jlblsupplier_code6;
    private javax.swing.JLabel jlblsupplier_code7;
    private javax.swing.JLabel jlblsupplier_code8;
    private javax.swing.JTable jtbldetail;
    private javax.swing.JTextField jtxtTanggalEntry;
    private javax.swing.JTextField jtxtTanggalUpdate;
    private javax.swing.JTextField jtxtUserID;
    private javax.swing.JTextField jtxtcustomer_code;
    private javax.swing.JTextField jtxtcustomer_name;
    private javax.swing.JTextField jtxtdocument_number;
    private javax.swing.JTextField jtxtdocument_status;
    private javax.swing.JTextField jtxtdscription;
    private javax.swing.JTextField jtxtfaktur_sebelum_amount;
    private javax.swing.JTextField jtxtfaktur_sebelum_no;
    private javax.swing.JTextField jtxtjumlah_item;
    private javax.swing.JTextField jtxtreference;
    private javax.swing.JTextField jtxtreference_number;
    private javax.swing.JTextField jtxttotal_aft_tax;
    private org.kazao.calendar.KazaoCalendarDate kzodocument_date;
    // End of variables declaration//GEN-END:variables

 
    public void moveFirst() throws CodeException {
        obj.moveFirst();
        if (obj.getdocentry()==0){
            newData();
        } else {
            showData();
        }
        mf.setIcon(CLASSNAME);
    }

    public void movePrevious() throws CodeException {
        obj.movePrevious();

        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveNext() throws CodeException {
        obj.moveNext();

        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveLast() throws CodeException {
        obj.moveLast();

        showData();
        mf.setIcon(CLASSNAME);
    }

    public void searchData() throws CodeException {
        showData();
        mf.setIcon(CLASSNAME);

    }

    private void clearfield(){
        jtxtdocument_number.setText("");
        jtxtdocument_status.setText("Open");
        try {
            kzodocument_date.setDate(GlobalUtils.getCurrentDate());
        } catch (KazaoCalendarDateTimeException ex) {
            Logger.getLogger(Frmar_pos_return.class.getName()).log(Level.SEVERE, null, ex);
        }
        jComboBox1.setSelectedIndex(0);
        jTextField1.setText("Ketik / Browse Master Produk");
        jtxtcustomer_code.setText("");
        jtxtreference.setText("");
        jtxtdscription.setText("");
        jtxtjumlah_item.setText("");
        jtxttotal_aft_tax.setText("");

        jtxtcustomer_name.setText("");

        jtxtTanggalEntry.setText("");
        jtxtTanggalUpdate.setText("");
        jtxtUserID.setText("");

        jtxtfaktur_sebelum_no.setText("");
        jtxtfaktur_sebelum_amount.setText("");
        jtxtreference_number.setText("");

        jtxtreference.setText(GlobalUtils.userid);
        jtxtdscription.setText(GlobalUtils.audituser);

        GlobalModel.clearRow(model);

        if (jtbldetail.getRowCount()==0){
            insertnewlastrow();
        }
    }

    public void newData() throws CodeException {
        Boolean bcontinue=false;
        in_warehouseext w=new in_warehouseext();
        try {
            if (!w.initdata(appsettinghandler.getwhscode())) {
                JOptionPane.showMessageDialog(this, "invalid warehouse setting in server.txt");
            } else {
                bcontinue=true;
            }
        } catch (CodeException ex) {
            Logger.getLogger(FrmMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (bcontinue){
        istatus=1;
        objtmp=obj;
        obj=new ar_pos_returnext();
        showData();

        ar_pos_optionext oar_opt=new ar_pos_optionext();
        if (oar_opt.moveFirst()){
            obj.setcounter_number(oar_opt.getcounter_number());
            obj.setcustomer_code(oar_opt.getcustomer_code());
            obj.setwarehouse_code(appsettinghandler.getwhscode());
//            obj.setmodel_struk(oar_opt.getmodel_struk());
            jtxtcustomer_code.setText(oar_opt.getcustomer_code());
            jtxtdocument_status.setText(obj.getcounter_number());
            showdatacustomer();
        }

        if (objtmp!=null){
        jtxtfaktur_sebelum_no.setText(objtmp.getdocument_number());
        jtxtfaktur_sebelum_amount.setText(GlobalUtils.formatnumber(objtmp.gettotal_aft_discount()));
        }

        setToolBar(iformtype,istatus);
        jTextField1.requestFocus();
        }
    }

    public void saveData() throws CodeException {
        setData();
        obj.update();
        showData();

        istatus = 0;
        setToolBar(iformtype,istatus);
        mf.setIcon(CLASSNAME);
    }

    public void showData() throws CodeException {
        clearfield();
        setToolBar(iformtype,istatus);
        setCursor(GlobalUtils.HOURGLASSCURSOR);

        jtxtdocument_number.setText(obj.getdocument_number());
        jtxtdocument_status.setText(obj.getdocument_status());
        try {
            kzodocument_date.setDate(GlobalUtils.formatDate(obj.getdocument_date(),"MM/dd/yyyy"));
        } catch (KazaoCalendarDateTimeException ex) {
            Logger.getLogger(Frmar_pos_return.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        jtxtcustomer_code.setText(obj.getcustomer_code());
        jtxtreference.setText(obj.getreference());
        jtxtreference_number.setText(obj.getreference_number());
        jtxtdscription.setText(obj.getdscription());
        jtxtjumlah_item.setText(GlobalUtils.formatnumber(obj.getDetail1().size()));
        jtxttotal_aft_tax.setText(GlobalUtils.formatnumber(obj.gettotal_aft_discount()));
        
        jtxtTanggalEntry.setText(GlobalUtils.churuf(obj.getentrydate()));
        jtxtTanggalUpdate.setText(GlobalUtils.churuf(obj.getauditdate()));
        jtxtUserID.setText(obj.getaudituser());

        jtxtcustomer_name.setText(obj.getOCustomer().getcustomer_name());
        jtxtdocument_status.setText(obj.getDocument_status_desc());

        appods=obj.getDetail1();
        
        GlobalModel.clearRow(model);

        if (jtbldetail.getRowCount()==0){
            insertnewlastrow();
        }
        int i=0;
        for (i=0;i<appods.size();i++){
            ar_pos_return_detail1ext appod = appods.get(i);
            model.setValueAt(i+1, i, 0);
            model.setValueAt(appod.getproduct_code(), i, 1);
            model.setValueAt(appod.getProduct_name(), i, 2);
            switch (appod.getuom_id()){
                case 1:
                    model.setValueAt("Pieces", i, 3);
                    break;
                case 2:
                    model.setValueAt("Inner", i, 3);
                    break;
                case 3:
                    model.setValueAt("Box", i, 3);
                    break;
            }
            model.setValueAt(appod.getquantity(), i, 4);
            model.setValueAt(appod.getUom_code(), i, 5);

            model.setValueAt(appod.getprice(), i, 6);
            model.setValueAt(appod.gettotal_gross(), i, 7);
            model.setValueAt(appod.getdiscount_percent(), i, 8);
            model.setValueAt(appod.gettotal_after_discount(), i, 9);
            model.setValueAt(appod.getquantity_pcs(), i, 10);
            insertnewlastrow();

        }
        jTextField1.requestFocus();
        setCursor(GlobalUtils.NORMALCURSOR);
    }

    public void delete() throws CodeException {
        if (obj.delete()){
            obj.moveNext();
            showData();
        }
        mf.setIcon(CLASSNAME);
    }

    public void setToolBar(int iFormType, int istatus) {
        mf.setToolBar(iformtype,istatus);

        if (istatus==1){
            jbtnBrowseDocument_Number.setEnabled(false);
        } else {
            jbtnBrowseDocument_Number.setEnabled(true);
        }
    }

    public void setData() throws CodeException {
        if (istatus==1){
            obj.insert();
        }
        obj.setdocument_number(jtxtdocument_number.getText());
        obj.setdocument_status(jtxtdocument_status.getText());
        obj.setdocument_date(kzodocument_date.getDate());
        obj.setdocument_duedate(obj.getdocument_date());
        obj.setcustomer_code(jtxtcustomer_code.getText());
        obj.setreference(jtxtreference.getText());
        obj.setdscription(jtxtdscription.getText());
        
    }

    public void undo() throws CodeException {
        istatus = 0;
        obj=objtmp;
        showData();
    }

    public void execute() throws CodeException {
       saveData();
    }

    public void printData() throws CodeException {
        parameter = new HashMap();
        parameter.put("document_number", obj.getdocument_number());
        // Versi 1
        String file = "";
        if (GlobalUtils.getAppDir()) {
            try {
                file = appsettinghandler.getAppPath() + "/Reports/Struk.jrxml";
                jasperReport = JasperCompileManager.compileReport(file);
                //System.out.println("file: "+file);
                System.out.println("isi parameter sruk:" + parameter);
                jasperPrint = JasperFillManager.fillReport(jasperReport, parameter, appsettinghandler.db.getConnection());
                JasperViewer.viewReport(jasperPrint, false);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    public void importCsv() throws CodeException {
            

    }

    public void exportCsv() throws CodeException {
        
        
    }

    public void importText() throws CodeException {
        
    }

    public void exportText() throws CodeException {
        
    }

    private void showdatacustomer() {
        oar_customer=new ar_customerext();
        try {
            if (oar_customer.run_sp_ar_customer_get_find(jtxtcustomer_code.getText())){
                jtxtcustomer_name.setText(oar_customer.getcustomer_name());
                obj.setdiscount_code(oar_customer.getdiscount_code());
                obj.setwarehouse_code(oar_customer.getwarehouse_code());
                obj.setsalesman_code("");
                obj.setprice_code(oar_customer.getprice_code());
                obj.setterm_code(oar_customer.getterm_code());
                jTextField1.requestFocus();
            }
        } catch (CodeException ex) {
            Logger.getLogger(Frmar_pos_return.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void insertnewlastrow() {
        if (!lastrowisempty()){
            model.addRow(new Object[model.getColumnCount()]);
            model.setValueAt(model.getRowCount(), model.getRowCount()-1, 0);
            model.setValueAt("Pieces", model.getRowCount()-1, 3);
            model.setValueAt(1, model.getRowCount()-1, 4);
            model.setValueAt(0, model.getRowCount()-1, 6);
            model.setValueAt(0, model.getRowCount()-1, 7);
            model.setValueAt(0, model.getRowCount()-1, 8);
            model.setValueAt(0, model.getRowCount()-1, 9);
            model.setValueAt(1, model.getRowCount()-1, 10);
            GlobalUtils.selectCellTable(jtbldetail, model.getRowCount()-1, 1);
        } else {
            GlobalUtils.selectCellTable(jtbldetail, model.getRowCount()-1, 1);
        }
    }

    private Boolean showproduct(Integer ishowproduct,Integer irow) {
        oin_product=new in_product_findcls();

        String sproduct_code="";
        String suom_id="1";


        if (ishowproduct==product_show_validate||ishowproduct==product_show_from_text){
                sproduct_code=jTextField1.getText();
                if (GlobalUtils.churuf(jComboBox1.getSelectedItem()).equalsIgnoreCase("inner")){
                    suom_id="2";
                }
                if (GlobalUtils.churuf(jComboBox1.getSelectedItem()).equalsIgnoreCase("box")){
                    suom_id="3";
                }
        }else if (ishowproduct==product_show_from_table){
                sproduct_code=GlobalUtils.churuf(model.getValueAt(irow, 1));
                if (GlobalUtils.churuf(model.getValueAt(irow, 3)).equalsIgnoreCase("inner")){
                    suom_id="2";
                }
                if (GlobalUtils.churuf(model.getValueAt(irow, 3)).equalsIgnoreCase("box")){
                    suom_id="3";
                }
        }


        String scost_price_code="BELI";
        String ssales_price_code="JUAL";
        if (oin_product.initdata(sproduct_code,suom_id,scost_price_code,ssales_price_code)) {
            if (ishowproduct==product_show_validate){
                return true;
            } else {
                model.setValueAt(oin_product.getProduct_code(), irow, 1);
                model.setValueAt(oin_product.getProduct_name(), irow, 2);
                model.setValueAt(oin_product.getUom_code(), irow, 5);
                model.setValueAt(oin_product.getPrice(), irow, 6);
                model.setValueAt(oin_product.getPrice(), irow, 7);
                model.setValueAt(oin_product.getUom(), irow, 10);
                String suom_desc="";
                switch (oin_product.getUom_id()){
                    case 1:
                    suom_desc="Pieces";
                    break;
                    case 2:
                    suom_desc="Inner";
                    break;
                    case 3:
                    suom_desc="Box";
                    break;
                }
                jComboBox1.setSelectedItem(suom_desc);
                model.setValueAt(suom_desc, irow, 3);
                jTextField1.setText(oin_product.getProduct_name());
                jTextField1FocusGained(null);
            }
        }
        return false;
    }

    private void cekdetail() {
        int row = jtbldetail.getSelectedRow();
        int col = jtbldetail.getSelectedColumn();


        ar_pos_return_detail1ext appod=new ar_pos_return_detail1ext();
        if (row > appods.size() - 1) {
            appod = new ar_pos_return_detail1ext();
            appod.setstatus(ar_pos_return_detail1ext.Status_Insert);
            appods.add(appod);
        } else {
            appod = (ar_pos_return_detail1ext) appods.get(row);
            if (!appod.getstatus().equals(ar_pos_return_detail1ext.Status_Insert)&&!appod.getstatus().equals(ar_pos_return_detail1ext.Status_delete)){
                appod.setstatus(ar_pos_return_detail1ext.Status_update);
            }
        }

        appod.setproduct_code(GlobalUtils.churuf(model.getValueAt(row, 1)));
        if (GlobalUtils.churuf(model.getValueAt(row, 3)).equalsIgnoreCase("Pieces")){
            appod.setuom_id(1);
        }
        if (GlobalUtils.churuf(model.getValueAt(row, 3)).equalsIgnoreCase("Inner")){
            appod.setuom_id(2);
        }
        if (GlobalUtils.churuf(model.getValueAt(row, 3)).equalsIgnoreCase("Box")){
            appod.setuom_id(3);
        }
        appod.setquantity(GlobalUtils.toDbl(GlobalUtils.churuf(model.getValueAt(row, 4))));
        appod.setprice(GlobalUtils.toDbl(GlobalUtils.churuf(model.getValueAt(row, 6))));
        appod.settotal_gross(appod.getquantity()*appod.getprice());
        model.setValueAt(appod.gettotal_gross(), row, 7);

        appod.setdiscount_percent(GlobalUtils.toDbl(GlobalUtils.churuf(model.getValueAt(row, 8))));
        appod.setdiscount_amount((appod.getquantity()*appod.getprice())*(appod.getdiscount_percent()/100));
        appod.settotal_after_discount((appod.getquantity()*appod.getprice())-((appod.getquantity()*appod.getprice())*(appod.getdiscount_percent()/100)));
        
        model.setValueAt(appod.gettotal_after_discount(), row, 9);

        appods.set(row, appod);

    }

    private boolean lastrowisempty() {
        if (model.getRowCount()>0){
            if (GlobalUtils.churuf(model.getValueAt(model.getRowCount()-1, 1)).equalsIgnoreCase("")){
                return true;
            }
        }
        return false;
    }

    private void dokeypress(KeyEvent evt) {
        try {
            switch (evt.getKeyCode()){
                case KeyEvent.VK_F2:
                    newData();
                    break;
                case KeyEvent.VK_F3:
                    undo();
                    break;
                case KeyEvent.VK_F4:
                    //reprint();
                    break;
                case KeyEvent.VK_F5:
                    browseproduct();
                    break;
                case KeyEvent.VK_F6:
                    //browsetransaksi();
                    break;
                case KeyEvent.VK_F9:
                    jbtnsupplier_codeActionPerformed(null);
                    break;
                case KeyEvent.VK_F12:
                    frmar_pos_return_payment opayment=new frmar_pos_return_payment(obj);
                    opayment.setModal(true);
                    opayment.setVisible(true);
                    break;
            }
        } catch (CodeException ex) {
            Logger.getLogger(Frmar_pos_return.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void browseproduct() {
        int row=jtbldetail.getSelectedRow();

        insertnewlastrow();

        browsecontroller obrowse=new browsecontroller();
        obrowse.showbrowser(obrowse.in_product, "", jtbldetail);
        
        if (!GlobalUtils.churuf(model.getValueAt(model.getRowCount()-1, 1)).equalsIgnoreCase("")){
            model.setValueAt(jComboBox1.getSelectedItem().toString(), model.getRowCount()-1, 3);
            showproduct(this.product_show_from_table,model.getRowCount()-1);
            jtbldetailPropertyChange(null);
        }

    }

    private int isproductexists(String kode_produk) {
        for (int i=0;i<appods.size();i++){
            ar_pos_return_detail1ext o = appods.get(i);
            if (o.getproduct_code().equalsIgnoreCase(kode_produk)){
                return i;
            }
        }
        return -1;
    }

    
}
